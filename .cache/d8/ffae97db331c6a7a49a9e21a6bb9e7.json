{"id":"../node_modules/@projectstorm/react-diagrams-core/dist/es/entities/node-layer/NodeLayerWidget.js","dependencies":[{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\dist\\es\\entities\\node-layer\\NodeLayerWidget.js.map","includedInParent":true,"mtime":1594481777956},{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\src\\entities\\node-layer\\NodeLayerWidget.tsx","includedInParent":true,"mtime":1594481777956},{"name":"C:\\myprojects\\groupthink\\Groupthink\\package.json","includedInParent":true,"mtime":1594485675900},{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\package.json","includedInParent":true,"mtime":1594481777956},{"name":"react","loc":{"line":4,"column":22},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\dist\\es\\entities\\node-layer\\NodeLayerWidget.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\react\\index.js"},{"name":"@emotion/styled","loc":{"line":5,"column":25},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\dist\\es\\entities\\node-layer\\NodeLayerWidget.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@emotion\\styled\\dist\\styled.browser.esm.js"},{"name":"lodash","loc":{"line":6,"column":18},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\dist\\es\\entities\\node-layer\\NodeLayerWidget.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\lodash\\lodash.js"},{"name":"../node/NodeWidget","loc":{"line":7,"column":29},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\dist\\es\\entities\\node-layer\\NodeLayerWidget.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\dist\\es\\entities\\node\\NodeWidget.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeLayerWidget = void 0;\nconst React = require(\"react\");\nconst styled_1 = require(\"@emotion/styled\");\nconst _ = require(\"lodash\");\nconst NodeWidget_1 = require(\"../node/NodeWidget\");\nvar S;\n(function (S) {\n    S.Container = styled_1.default.div ``;\n})(S || (S = {}));\nclass NodeLayerWidget extends React.Component {\n    render() {\n        return (React.createElement(React.Fragment, null, _.map(this.props.layer.getNodes(), (node) => {\n            return React.createElement(NodeWidget_1.NodeWidget, { key: node.getID(), diagramEngine: this.props.engine, node: node });\n        })));\n    }\n}\nexports.NodeLayerWidget = NodeLayerWidget;\n"},"sourceMaps":{"js":{"version":3,"file":"NodeLayerWidget.js","sourceRoot":"","sources":["../../../../src/entities/node-layer/NodeLayerWidget.tsx"],"names":[],"mappings":";;;AAAA,+BAA+B;AAC/B,4CAAqC;AACrC,4BAA4B;AAE5B,mDAAgD;AAShD,IAAU,CAAC,CAEV;AAFD,WAAU,CAAC;IACG,WAAS,GAAG,gBAAM,CAAC,GAAG,CAAA,EAAE,CAAC;AACvC,CAAC,EAFS,CAAC,KAAD,CAAC,QAEV;AAED,MAAa,eAAgB,SAAQ,KAAK,CAAC,SAA+B;IACzE,MAAM;QACL,OAAO,CACN,0CACE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,CAAC,IAAe,EAAE,EAAE;YACvD,OAAO,oBAAC,uBAAU,IAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,EAAE,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,GAAI,CAAC;QACxF,CAAC,CAAC,CACA,CACH,CAAC;IACH,CAAC;CACD;AAVD,0CAUC","sourcesContent":["import * as React from 'react';\nimport styled from '@emotion/styled';\nimport * as _ from 'lodash';\nimport { NodeModel } from '../node/NodeModel';\nimport { NodeWidget } from '../node/NodeWidget';\nimport { NodeLayerModel } from './NodeLayerModel';\nimport { DiagramEngine } from '../../DiagramEngine';\n\nexport interface NodeLayerWidgetProps {\n\tlayer: NodeLayerModel;\n\tengine: DiagramEngine;\n}\n\nnamespace S {\n\texport const Container = styled.div``;\n}\n\nexport class NodeLayerWidget extends React.Component<NodeLayerWidgetProps> {\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{_.map(this.props.layer.getNodes(), (node: NodeModel) => {\n\t\t\t\t\treturn <NodeWidget key={node.getID()} diagramEngine={this.props.engine} node={node} />;\n\t\t\t\t})}\n\t\t\t</>\n\t\t);\n\t}\n}\n"]}},"error":null,"hash":"c786a312e43067121798e1c076167393","cacheData":{"env":{}}}