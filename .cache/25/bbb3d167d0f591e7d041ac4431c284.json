{"id":"../node_modules/@projectstorm/geometry/dist/es/Point.js","dependencies":[{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\geometry\\dist\\es\\Point.js.map","includedInParent":true,"mtime":1594481777974},{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\geometry\\src\\Point.ts","includedInParent":true,"mtime":1594481777974},{"name":"C:\\myprojects\\groupthink\\Groupthink\\package.json","includedInParent":true,"mtime":1594485675900},{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\geometry\\package.json","includedInParent":true,"mtime":1594481777974},{"name":"ml-matrix","loc":{"line":4,"column":28},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\geometry\\dist\\es\\Point.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\ml-matrix\\src\\index.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Point = void 0;\nconst ml_matrix_1 = require(\"ml-matrix\");\nclass Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    translate(x, y) {\n        this.x += x;\n        this.y += y;\n    }\n    clone() {\n        return new Point(this.x, this.y);\n    }\n    toSVG() {\n        return this.x + ' ' + this.y;\n    }\n    asMatrix() {\n        return new ml_matrix_1.Matrix([[this.x], [this.y], [1]]);\n    }\n    transform(matrix) {\n        let final = matrix.mmul(this.asMatrix());\n        this.x = final.get(0, 0);\n        this.y = final.get(1, 0);\n    }\n    static middlePoint(pointA, pointB) {\n        return new Point((pointB.x + pointA.x) / 2, (pointB.y + pointA.y) / 2);\n    }\n    static multiply(...matrices) {\n        let m = matrices[0];\n        for (let i = 1; i < matrices.length; i++) {\n            m = m.mmul(matrices[i]);\n        }\n        return m;\n    }\n    static scaleMatrix(x, y) {\n        return new ml_matrix_1.Matrix([\n            [x, 0, 0],\n            [0, y, 0],\n            [0, 0, 1]\n        ]);\n    }\n    static translateMatrix(x, y) {\n        return new ml_matrix_1.Matrix([\n            [1, 0, x],\n            [0, 1, y],\n            [0, 0, 1]\n        ]);\n    }\n    static rotateMatrix(deg) {\n        return new ml_matrix_1.Matrix([\n            [Math.cos(deg), -1 * Math.sin(deg), 0],\n            [Math.sin(deg), Math.cos(deg), 0],\n            [0, 0, 1]\n        ]);\n    }\n    static createScaleMatrix(x, y, origin) {\n        return this.multiply(Point.translateMatrix(origin.x, origin.y), Point.scaleMatrix(x, y), Point.translateMatrix(-origin.x, -origin.y));\n    }\n    static createRotateMatrix(deg, origin) {\n        return this.multiply(Point.translateMatrix(origin.x, origin.y), Point.rotateMatrix(deg), Point.translateMatrix(-origin.x, -origin.y));\n    }\n}\nexports.Point = Point;\n"},"sourceMaps":{"js":{"version":3,"file":"Point.js","sourceRoot":"","sources":["../../src/Point.ts"],"names":[],"mappings":"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","sourcesContent":["import { Matrix } from 'ml-matrix';\n\nexport class Point {\n\tx: number;\n\ty: number;\n\n\tconstructor(x: number, y: number) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\n\ttranslate(x: number, y: number) {\n\t\tthis.x += x;\n\t\tthis.y += y;\n\t}\n\n\tclone() {\n\t\treturn new Point(this.x, this.y);\n\t}\n\n\ttoSVG() {\n\t\treturn this.x + ' ' + this.y;\n\t}\n\n\tasMatrix() {\n\t\treturn new Matrix([[this.x], [this.y], [1]]);\n\t}\n\n\ttransform(matrix: Matrix) {\n\t\tlet final: Matrix = matrix.mmul(this.asMatrix());\n\t\tthis.x = final.get(0, 0);\n\t\tthis.y = final.get(1, 0);\n\t}\n\n\tpublic static middlePoint(pointA: Point, pointB: Point): Point {\n\t\treturn new Point((pointB.x + pointA.x) / 2, (pointB.y + pointA.y) / 2);\n\t}\n\n\tpublic static multiply(...matrices: Matrix[]): Matrix {\n\t\tlet m: Matrix = matrices[0];\n\t\tfor (let i = 1; i < matrices.length; i++) {\n\t\t\tm = m.mmul(matrices[i]);\n\t\t}\n\t\treturn m;\n\t}\n\n\tpublic static scaleMatrix(x: number, y: number): Matrix {\n\t\treturn new Matrix([\n\t\t\t[x, 0, 0],\n\t\t\t[0, y, 0],\n\t\t\t[0, 0, 1]\n\t\t]);\n\t}\n\n\tpublic static translateMatrix(x: number, y: number): Matrix {\n\t\treturn new Matrix([\n\t\t\t[1, 0, x],\n\t\t\t[0, 1, y],\n\t\t\t[0, 0, 1]\n\t\t]);\n\t}\n\n\tpublic static rotateMatrix(deg: number): Matrix {\n\t\treturn new Matrix([\n\t\t\t[Math.cos(deg), -1 * Math.sin(deg), 0],\n\t\t\t[Math.sin(deg), Math.cos(deg), 0],\n\t\t\t[0, 0, 1]\n\t\t]);\n\t}\n\n\tstatic createScaleMatrix(x, y, origin: Point): Matrix {\n\t\treturn this.multiply(\n\t\t\tPoint.translateMatrix(origin.x, origin.y),\n\t\t\tPoint.scaleMatrix(x, y),\n\t\t\tPoint.translateMatrix(-origin.x, -origin.y)\n\t\t);\n\t}\n\n\tstatic createRotateMatrix(deg: number, origin: Point): Matrix {\n\t\treturn this.multiply(\n\t\t\tPoint.translateMatrix(origin.x, origin.y),\n\t\t\tPoint.rotateMatrix(deg),\n\t\t\tPoint.translateMatrix(-origin.x, -origin.y)\n\t\t);\n\t}\n}\n"]}},"error":null,"hash":"e87698817ec3b3027a8b652c7d8d04e4","cacheData":{"env":{}}}