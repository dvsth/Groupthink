{"id":"../node_modules/dagre/lib/util.js","dependencies":[{"name":"C:\\myprojects\\groupthink\\Groupthink\\package.json","includedInParent":true,"mtime":1594485675900},{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\dagre\\package.json","includedInParent":true,"mtime":1594481940992},{"name":"./lodash","loc":{"line":5,"column":16},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\dagre\\lib\\util.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\dagre\\lib\\lodash.js"},{"name":"./graphlib","loc":{"line":6,"column":20},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\dagre\\lib\\util.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\dagre\\lib\\graphlib.js"}],"generated":{"js":"/* eslint \"no-console\": off */\n\n\"use strict\";\n\nvar _ = require(\"./lodash\");\nvar Graph = require(\"./graphlib\").Graph;\n\nmodule.exports = {\n  addDummyNode: addDummyNode,\n  simplify: simplify,\n  asNonCompoundGraph: asNonCompoundGraph,\n  successorWeights: successorWeights,\n  predecessorWeights: predecessorWeights,\n  intersectRect: intersectRect,\n  buildLayerMatrix: buildLayerMatrix,\n  normalizeRanks: normalizeRanks,\n  removeEmptyRanks: removeEmptyRanks,\n  addBorderNode: addBorderNode,\n  maxRank: maxRank,\n  partition: partition,\n  time: time,\n  notime: notime\n};\n\n/*\n * Adds a dummy node to the graph and return v.\n */\nfunction addDummyNode(g, type, attrs, name) {\n  var v;\n  do {\n    v = _.uniqueId(name);\n  } while (g.hasNode(v));\n\n  attrs.dummy = type;\n  g.setNode(v, attrs);\n  return v;\n}\n\n/*\n * Returns a new graph with only simple edges. Handles aggregation of data\n * associated with multi-edges.\n */\nfunction simplify(g) {\n  var simplified = new Graph().setGraph(g.graph());\n  _.forEach(g.nodes(), function(v) { simplified.setNode(v, g.node(v)); });\n  _.forEach(g.edges(), function(e) {\n    var simpleLabel = simplified.edge(e.v, e.w) || { weight: 0, minlen: 1 };\n    var label = g.edge(e);\n    simplified.setEdge(e.v, e.w, {\n      weight: simpleLabel.weight + label.weight,\n      minlen: Math.max(simpleLabel.minlen, label.minlen)\n    });\n  });\n  return simplified;\n}\n\nfunction asNonCompoundGraph(g) {\n  var simplified = new Graph({ multigraph: g.isMultigraph() }).setGraph(g.graph());\n  _.forEach(g.nodes(), function(v) {\n    if (!g.children(v).length) {\n      simplified.setNode(v, g.node(v));\n    }\n  });\n  _.forEach(g.edges(), function(e) {\n    simplified.setEdge(e, g.edge(e));\n  });\n  return simplified;\n}\n\nfunction successorWeights(g) {\n  var weightMap = _.map(g.nodes(), function(v) {\n    var sucs = {};\n    _.forEach(g.outEdges(v), function(e) {\n      sucs[e.w] = (sucs[e.w] || 0) + g.edge(e).weight;\n    });\n    return sucs;\n  });\n  return _.zipObject(g.nodes(), weightMap);\n}\n\nfunction predecessorWeights(g) {\n  var weightMap = _.map(g.nodes(), function(v) {\n    var preds = {};\n    _.forEach(g.inEdges(v), function(e) {\n      preds[e.v] = (preds[e.v] || 0) + g.edge(e).weight;\n    });\n    return preds;\n  });\n  return _.zipObject(g.nodes(), weightMap);\n}\n\n/*\n * Finds where a line starting at point ({x, y}) would intersect a rectangle\n * ({x, y, width, height}) if it were pointing at the rectangle's center.\n */\nfunction intersectRect(rect, point) {\n  var x = rect.x;\n  var y = rect.y;\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = rect.width / 2;\n  var h = rect.height / 2;\n\n  if (!dx && !dy) {\n    throw new Error(\"Not possible to find intersection inside of the rectangle\");\n  }\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = h * dx / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = w * dy / dx;\n  }\n\n  return { x: x + sx, y: y + sy };\n}\n\n/*\n * Given a DAG with each node assigned \"rank\" and \"order\" properties, this\n * function will produce a matrix with the ids of each node.\n */\nfunction buildLayerMatrix(g) {\n  var layering = _.map(_.range(maxRank(g) + 1), function() { return []; });\n  _.forEach(g.nodes(), function(v) {\n    var node = g.node(v);\n    var rank = node.rank;\n    if (!_.isUndefined(rank)) {\n      layering[rank][node.order] = v;\n    }\n  });\n  return layering;\n}\n\n/*\n * Adjusts the ranks for all nodes in the graph such that all nodes v have\n * rank(v) >= 0 and at least one node w has rank(w) = 0.\n */\nfunction normalizeRanks(g) {\n  var min = _.min(_.map(g.nodes(), function(v) { return g.node(v).rank; }));\n  _.forEach(g.nodes(), function(v) {\n    var node = g.node(v);\n    if (_.has(node, \"rank\")) {\n      node.rank -= min;\n    }\n  });\n}\n\nfunction removeEmptyRanks(g) {\n  // Ranks may not start at 0, so we need to offset them\n  var offset = _.min(_.map(g.nodes(), function(v) { return g.node(v).rank; }));\n\n  var layers = [];\n  _.forEach(g.nodes(), function(v) {\n    var rank = g.node(v).rank - offset;\n    if (!layers[rank]) {\n      layers[rank] = [];\n    }\n    layers[rank].push(v);\n  });\n\n  var delta = 0;\n  var nodeRankFactor = g.graph().nodeRankFactor;\n  _.forEach(layers, function(vs, i) {\n    if (_.isUndefined(vs) && i % nodeRankFactor !== 0) {\n      --delta;\n    } else if (delta) {\n      _.forEach(vs, function(v) { g.node(v).rank += delta; });\n    }\n  });\n}\n\nfunction addBorderNode(g, prefix, rank, order) {\n  var node = {\n    width: 0,\n    height: 0\n  };\n  if (arguments.length >= 4) {\n    node.rank = rank;\n    node.order = order;\n  }\n  return addDummyNode(g, \"border\", node, prefix);\n}\n\nfunction maxRank(g) {\n  return _.max(_.map(g.nodes(), function(v) {\n    var rank = g.node(v).rank;\n    if (!_.isUndefined(rank)) {\n      return rank;\n    }\n  }));\n}\n\n/*\n * Partition a collection into two groups: `lhs` and `rhs`. If the supplied\n * function returns true for an entry it goes into `lhs`. Otherwise it goes\n * into `rhs.\n */\nfunction partition(collection, fn) {\n  var result = { lhs: [], rhs: [] };\n  _.forEach(collection, function(value) {\n    if (fn(value)) {\n      result.lhs.push(value);\n    } else {\n      result.rhs.push(value);\n    }\n  });\n  return result;\n}\n\n/*\n * Returns a new function that wraps `fn` with a timer. The wrapper logs the\n * time it takes to execute the function.\n */\nfunction time(name, fn) {\n  var start = _.now();\n  try {\n    return fn();\n  } finally {\n    console.log(name + \" time: \" + (_.now() - start) + \"ms\");\n  }\n}\n\nfunction notime(name, fn) {\n  return fn();\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/dagre/lib/util.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/dagre/lib/util.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}}],"sources":{"../node_modules/dagre/lib/util.js":"/* eslint \"no-console\": off */\n\n\"use strict\";\n\nvar _ = require(\"./lodash\");\nvar Graph = require(\"./graphlib\").Graph;\n\nmodule.exports = {\n  addDummyNode: addDummyNode,\n  simplify: simplify,\n  asNonCompoundGraph: asNonCompoundGraph,\n  successorWeights: successorWeights,\n  predecessorWeights: predecessorWeights,\n  intersectRect: intersectRect,\n  buildLayerMatrix: buildLayerMatrix,\n  normalizeRanks: normalizeRanks,\n  removeEmptyRanks: removeEmptyRanks,\n  addBorderNode: addBorderNode,\n  maxRank: maxRank,\n  partition: partition,\n  time: time,\n  notime: notime\n};\n\n/*\n * Adds a dummy node to the graph and return v.\n */\nfunction addDummyNode(g, type, attrs, name) {\n  var v;\n  do {\n    v = _.uniqueId(name);\n  } while (g.hasNode(v));\n\n  attrs.dummy = type;\n  g.setNode(v, attrs);\n  return v;\n}\n\n/*\n * Returns a new graph with only simple edges. Handles aggregation of data\n * associated with multi-edges.\n */\nfunction simplify(g) {\n  var simplified = new Graph().setGraph(g.graph());\n  _.forEach(g.nodes(), function(v) { simplified.setNode(v, g.node(v)); });\n  _.forEach(g.edges(), function(e) {\n    var simpleLabel = simplified.edge(e.v, e.w) || { weight: 0, minlen: 1 };\n    var label = g.edge(e);\n    simplified.setEdge(e.v, e.w, {\n      weight: simpleLabel.weight + label.weight,\n      minlen: Math.max(simpleLabel.minlen, label.minlen)\n    });\n  });\n  return simplified;\n}\n\nfunction asNonCompoundGraph(g) {\n  var simplified = new Graph({ multigraph: g.isMultigraph() }).setGraph(g.graph());\n  _.forEach(g.nodes(), function(v) {\n    if (!g.children(v).length) {\n      simplified.setNode(v, g.node(v));\n    }\n  });\n  _.forEach(g.edges(), function(e) {\n    simplified.setEdge(e, g.edge(e));\n  });\n  return simplified;\n}\n\nfunction successorWeights(g) {\n  var weightMap = _.map(g.nodes(), function(v) {\n    var sucs = {};\n    _.forEach(g.outEdges(v), function(e) {\n      sucs[e.w] = (sucs[e.w] || 0) + g.edge(e).weight;\n    });\n    return sucs;\n  });\n  return _.zipObject(g.nodes(), weightMap);\n}\n\nfunction predecessorWeights(g) {\n  var weightMap = _.map(g.nodes(), function(v) {\n    var preds = {};\n    _.forEach(g.inEdges(v), function(e) {\n      preds[e.v] = (preds[e.v] || 0) + g.edge(e).weight;\n    });\n    return preds;\n  });\n  return _.zipObject(g.nodes(), weightMap);\n}\n\n/*\n * Finds where a line starting at point ({x, y}) would intersect a rectangle\n * ({x, y, width, height}) if it were pointing at the rectangle's center.\n */\nfunction intersectRect(rect, point) {\n  var x = rect.x;\n  var y = rect.y;\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = rect.width / 2;\n  var h = rect.height / 2;\n\n  if (!dx && !dy) {\n    throw new Error(\"Not possible to find intersection inside of the rectangle\");\n  }\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = h * dx / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = w * dy / dx;\n  }\n\n  return { x: x + sx, y: y + sy };\n}\n\n/*\n * Given a DAG with each node assigned \"rank\" and \"order\" properties, this\n * function will produce a matrix with the ids of each node.\n */\nfunction buildLayerMatrix(g) {\n  var layering = _.map(_.range(maxRank(g) + 1), function() { return []; });\n  _.forEach(g.nodes(), function(v) {\n    var node = g.node(v);\n    var rank = node.rank;\n    if (!_.isUndefined(rank)) {\n      layering[rank][node.order] = v;\n    }\n  });\n  return layering;\n}\n\n/*\n * Adjusts the ranks for all nodes in the graph such that all nodes v have\n * rank(v) >= 0 and at least one node w has rank(w) = 0.\n */\nfunction normalizeRanks(g) {\n  var min = _.min(_.map(g.nodes(), function(v) { return g.node(v).rank; }));\n  _.forEach(g.nodes(), function(v) {\n    var node = g.node(v);\n    if (_.has(node, \"rank\")) {\n      node.rank -= min;\n    }\n  });\n}\n\nfunction removeEmptyRanks(g) {\n  // Ranks may not start at 0, so we need to offset them\n  var offset = _.min(_.map(g.nodes(), function(v) { return g.node(v).rank; }));\n\n  var layers = [];\n  _.forEach(g.nodes(), function(v) {\n    var rank = g.node(v).rank - offset;\n    if (!layers[rank]) {\n      layers[rank] = [];\n    }\n    layers[rank].push(v);\n  });\n\n  var delta = 0;\n  var nodeRankFactor = g.graph().nodeRankFactor;\n  _.forEach(layers, function(vs, i) {\n    if (_.isUndefined(vs) && i % nodeRankFactor !== 0) {\n      --delta;\n    } else if (delta) {\n      _.forEach(vs, function(v) { g.node(v).rank += delta; });\n    }\n  });\n}\n\nfunction addBorderNode(g, prefix, rank, order) {\n  var node = {\n    width: 0,\n    height: 0\n  };\n  if (arguments.length >= 4) {\n    node.rank = rank;\n    node.order = order;\n  }\n  return addDummyNode(g, \"border\", node, prefix);\n}\n\nfunction maxRank(g) {\n  return _.max(_.map(g.nodes(), function(v) {\n    var rank = g.node(v).rank;\n    if (!_.isUndefined(rank)) {\n      return rank;\n    }\n  }));\n}\n\n/*\n * Partition a collection into two groups: `lhs` and `rhs`. If the supplied\n * function returns true for an entry it goes into `lhs`. Otherwise it goes\n * into `rhs.\n */\nfunction partition(collection, fn) {\n  var result = { lhs: [], rhs: [] };\n  _.forEach(collection, function(value) {\n    if (fn(value)) {\n      result.lhs.push(value);\n    } else {\n      result.rhs.push(value);\n    }\n  });\n  return result;\n}\n\n/*\n * Returns a new function that wraps `fn` with a timer. The wrapper logs the\n * time it takes to execute the function.\n */\nfunction time(name, fn) {\n  var start = _.now();\n  try {\n    return fn();\n  } finally {\n    console.log(name + \" time: \" + (_.now() - start) + \"ms\");\n  }\n}\n\nfunction notime(name, fn) {\n  return fn();\n}\n"},"lineCount":239}},"error":null,"hash":"0e49cf1a83aaf73fd45a8e4aa70ac099","cacheData":{"env":{}}}