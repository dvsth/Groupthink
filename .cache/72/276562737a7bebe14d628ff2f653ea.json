{"id":"../node_modules/@projectstorm/react-canvas-core/dist/es/core-state/AbstractDisplacementState.js","dependencies":[{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-canvas-core\\dist\\es\\core-state\\AbstractDisplacementState.js.map","includedInParent":true,"mtime":1594481777970},{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-canvas-core\\src\\core-state\\AbstractDisplacementState.ts","includedInParent":true,"mtime":1594481777970},{"name":"C:\\myprojects\\groupthink\\Groupthink\\package.json","includedInParent":true,"mtime":1594485675900},{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-canvas-core\\package.json","includedInParent":true,"mtime":1594481777970},{"name":"./State","loc":{"line":4,"column":24},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-canvas-core\\dist\\es\\core-state\\AbstractDisplacementState.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-canvas-core\\dist\\es\\core-state\\State.js"},{"name":"../core-actions/Action","loc":{"line":5,"column":25},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-canvas-core\\dist\\es\\core-state\\AbstractDisplacementState.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-canvas-core\\dist\\es\\core-actions\\Action.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbstractDisplacementState = void 0;\nconst State_1 = require(\"./State\");\nconst Action_1 = require(\"../core-actions/Action\");\nclass AbstractDisplacementState extends State_1.State {\n    constructor(options) {\n        super(options);\n        this.registerAction(new Action_1.Action({\n            type: Action_1.InputType.MOUSE_DOWN,\n            fire: (actionEvent) => {\n                this.initialX = actionEvent.event.clientX;\n                this.initialY = actionEvent.event.clientY;\n                const rel = this.engine.getRelativePoint(actionEvent.event.clientX, actionEvent.event.clientY);\n                this.initialXRelative = rel.x;\n                this.initialYRelative = rel.y;\n            }\n        }));\n        this.registerAction(new Action_1.Action({\n            type: Action_1.InputType.MOUSE_MOVE,\n            fire: (actionEvent) => {\n                const { event } = actionEvent;\n                this.fireMouseMoved({\n                    displacementX: event.clientX - this.initialX,\n                    displacementY: event.clientY - this.initialY,\n                    virtualDisplacementX: (event.clientX - this.initialX) / (this.engine.getModel().getZoomLevel() / 100.0),\n                    virtualDisplacementY: (event.clientY - this.initialY) / (this.engine.getModel().getZoomLevel() / 100.0),\n                    event: event\n                });\n            }\n        }));\n        this.registerAction(new Action_1.Action({\n            type: Action_1.InputType.MOUSE_UP,\n            fire: (event) => {\n                // when the mouse if up, we eject this state\n                this.eject();\n            }\n        }));\n    }\n}\nexports.AbstractDisplacementState = AbstractDisplacementState;\n"},"sourceMaps":{"js":{"version":3,"file":"AbstractDisplacementState.js","sourceRoot":"","sources":["../../../src/core-state/AbstractDisplacementState.ts"],"names":[],"mappings":";;;AAAA,mCAA8C;AAC9C,mDAAwE;AAWxE,MAAsB,yBAAiE,SAAQ,aAAQ;IAMtG,YAAY,OAAqB;QAChC,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,cAAc,CAClB,IAAI,eAAM,CAAC;YACV,IAAI,EAAE,kBAAS,CAAC,UAAU;YAC1B,IAAI,EAAE,CAAC,WAA0C,EAAE,EAAE;gBACpD,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC;gBAC1C,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC;gBAC1C,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBAC/F,IAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC,CAAC,CAAC;gBAC9B,IAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC,CAAC,CAAC;YAC/B,CAAC;SACD,CAAC,CACF,CAAC;QACF,IAAI,CAAC,cAAc,CAClB,IAAI,eAAM,CAAC;YACV,IAAI,EAAE,kBAAS,CAAC,UAAU;YAC1B,IAAI,EAAE,CAAC,WAA0C,EAAE,EAAE;gBACpD,MAAM,EAAE,KAAK,EAAE,GAAG,WAAW,CAAC;gBAC9B,IAAI,CAAC,cAAc,CAAC;oBACnB,aAAa,EAAE,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ;oBAC5C,aAAa,EAAE,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ;oBAC5C,oBAAoB,EAAE,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,YAAY,EAAE,GAAG,KAAK,CAAC;oBACvG,oBAAoB,EAAE,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,YAAY,EAAE,GAAG,KAAK,CAAC;oBACvG,KAAK,EAAE,KAAK;iBACZ,CAAC,CAAC;YACJ,CAAC;SACD,CAAC,CACF,CAAC;QACF,IAAI,CAAC,cAAc,CAClB,IAAI,eAAM,CAAC;YACV,IAAI,EAAE,kBAAS,CAAC,QAAQ;YACxB,IAAI,EAAE,CAAC,KAAoC,EAAE,EAAE;gBAC9C,4CAA4C;gBAC5C,IAAI,CAAC,KAAK,EAAE,CAAC;YACd,CAAC;SACD,CAAC,CACF,CAAC;IACH,CAAC;CAGD;AA/CD,8DA+CC","sourcesContent":["import { State, StateOptions } from './State';\nimport { Action, ActionEvent, InputType } from '../core-actions/Action';\nimport { CanvasEngine } from '../CanvasEngine';\n\nexport interface AbstractDisplacementStateEvent {\n\tdisplacementX: number;\n\tdisplacementY: number;\n\tvirtualDisplacementX: number;\n\tvirtualDisplacementY: number;\n\tevent: React.MouseEvent;\n}\n\nexport abstract class AbstractDisplacementState<E extends CanvasEngine = CanvasEngine> extends State<E> {\n\tinitialX: number;\n\tinitialY: number;\n\tinitialXRelative: number;\n\tinitialYRelative: number;\n\n\tconstructor(options: StateOptions) {\n\t\tsuper(options);\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.MOUSE_DOWN,\n\t\t\t\tfire: (actionEvent: ActionEvent<React.MouseEvent>) => {\n\t\t\t\t\tthis.initialX = actionEvent.event.clientX;\n\t\t\t\t\tthis.initialY = actionEvent.event.clientY;\n\t\t\t\t\tconst rel = this.engine.getRelativePoint(actionEvent.event.clientX, actionEvent.event.clientY);\n\t\t\t\t\tthis.initialXRelative = rel.x;\n\t\t\t\t\tthis.initialYRelative = rel.y;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.MOUSE_MOVE,\n\t\t\t\tfire: (actionEvent: ActionEvent<React.MouseEvent>) => {\n\t\t\t\t\tconst { event } = actionEvent;\n\t\t\t\t\tthis.fireMouseMoved({\n\t\t\t\t\t\tdisplacementX: event.clientX - this.initialX,\n\t\t\t\t\t\tdisplacementY: event.clientY - this.initialY,\n\t\t\t\t\t\tvirtualDisplacementX: (event.clientX - this.initialX) / (this.engine.getModel().getZoomLevel() / 100.0),\n\t\t\t\t\t\tvirtualDisplacementY: (event.clientY - this.initialY) / (this.engine.getModel().getZoomLevel() / 100.0),\n\t\t\t\t\t\tevent: event\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.MOUSE_UP,\n\t\t\t\tfire: (event: ActionEvent<React.MouseEvent>) => {\n\t\t\t\t\t// when the mouse if up, we eject this state\n\t\t\t\t\tthis.eject();\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\n\tabstract fireMouseMoved(event: AbstractDisplacementStateEvent);\n}\n"]}},"error":null,"hash":"43c9c8dab945645f5d386b5d921831b8","cacheData":{"env":{}}}