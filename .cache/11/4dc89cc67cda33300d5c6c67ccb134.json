{"id":"../node_modules/@projectstorm/react-canvas-core/dist/es/CanvasEngine.js","dependencies":[{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-canvas-core\\dist\\es\\CanvasEngine.js.map","includedInParent":true,"mtime":1594481777970},{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-canvas-core\\src\\CanvasEngine.ts","includedInParent":true,"mtime":1594481777970},{"name":"C:\\myprojects\\groupthink\\Groupthink\\package.json","includedInParent":true,"mtime":1594485675900},{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-canvas-core\\package.json","includedInParent":true,"mtime":1594481777970},{"name":"lodash","loc":{"line":4,"column":25},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-canvas-core\\dist\\es\\CanvasEngine.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\lodash\\lodash.js"},{"name":"./core/FactoryBank","loc":{"line":5,"column":30},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-canvas-core\\dist\\es\\CanvasEngine.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-canvas-core\\dist\\es\\core\\FactoryBank.js"},{"name":"./core/BaseObserver","loc":{"line":6,"column":31},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-canvas-core\\dist\\es\\CanvasEngine.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-canvas-core\\dist\\es\\core\\BaseObserver.js"},{"name":"@projectstorm/geometry","loc":{"line":7,"column":27},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-canvas-core\\dist\\es\\CanvasEngine.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\geometry\\dist\\es\\index.js"},{"name":"./core-actions/ActionEventBus","loc":{"line":8,"column":33},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-canvas-core\\dist\\es\\CanvasEngine.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-canvas-core\\dist\\es\\core-actions\\ActionEventBus.js"},{"name":"./actions/ZoomCanvasAction","loc":{"line":9,"column":35},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-canvas-core\\dist\\es\\CanvasEngine.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-canvas-core\\dist\\es\\actions\\ZoomCanvasAction.js"},{"name":"./actions/DeleteItemsAction","loc":{"line":10,"column":36},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-canvas-core\\dist\\es\\CanvasEngine.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-canvas-core\\dist\\es\\actions\\DeleteItemsAction.js"},{"name":"./core-state/StateMachine","loc":{"line":11,"column":31},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-canvas-core\\dist\\es\\CanvasEngine.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-canvas-core\\dist\\es\\core-state\\StateMachine.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CanvasEngine = void 0;\nconst lodash_1 = require(\"lodash\");\nconst FactoryBank_1 = require(\"./core/FactoryBank\");\nconst BaseObserver_1 = require(\"./core/BaseObserver\");\nconst geometry_1 = require(\"@projectstorm/geometry\");\nconst ActionEventBus_1 = require(\"./core-actions/ActionEventBus\");\nconst ZoomCanvasAction_1 = require(\"./actions/ZoomCanvasAction\");\nconst DeleteItemsAction_1 = require(\"./actions/DeleteItemsAction\");\nconst StateMachine_1 = require(\"./core-state/StateMachine\");\nclass CanvasEngine extends BaseObserver_1.BaseObserver {\n    constructor(options = {}) {\n        super();\n        this.model = null;\n        this.eventBus = new ActionEventBus_1.ActionEventBus(this);\n        this.stateMachine = new StateMachine_1.StateMachine(this);\n        this.layerFactories = new FactoryBank_1.FactoryBank();\n        this.registerFactoryBank(this.layerFactories);\n        /**\n         * Overrides the standard options with the possible given options\n         */\n        this.options = Object.assign({ registerDefaultDeleteItemsAction: true, registerDefaultZoomCanvasAction: true, repaintDebounceMs: 0 }, options);\n        if (this.options.registerDefaultZoomCanvasAction === true) {\n            this.eventBus.registerAction(new ZoomCanvasAction_1.ZoomCanvasAction());\n        }\n        if (this.options.registerDefaultDeleteItemsAction === true) {\n            this.eventBus.registerAction(new DeleteItemsAction_1.DeleteItemsAction());\n        }\n    }\n    getStateMachine() {\n        return this.stateMachine;\n    }\n    getRelativeMousePoint(event) {\n        const point = this.getRelativePoint(event.clientX, event.clientY);\n        return new geometry_1.Point((point.x - this.model.getOffsetX()) / (this.model.getZoomLevel() / 100.0), (point.y - this.model.getOffsetY()) / (this.model.getZoomLevel() / 100.0));\n    }\n    getRelativePoint(x, y) {\n        const canvasRect = this.canvas.getBoundingClientRect();\n        return new geometry_1.Point(x - canvasRect.left, y - canvasRect.top);\n    }\n    registerFactoryBank(factory) {\n        factory.registerListener({\n            factoryAdded: (event) => {\n                event.factory.setDiagramEngine(this);\n            },\n            factoryRemoved: (event) => {\n                event.factory.setDiagramEngine(null);\n            }\n        });\n    }\n    getActionEventBus() {\n        return this.eventBus;\n    }\n    getLayerFactories() {\n        return this.layerFactories;\n    }\n    getFactoryForLayer(layer) {\n        if (typeof layer === 'string') {\n            return this.layerFactories.getFactory(layer);\n        }\n        return this.layerFactories.getFactory(layer.getType());\n    }\n    setModel(model) {\n        this.model = model;\n        if (this.canvas) {\n            requestAnimationFrame(() => {\n                this.repaintCanvas();\n            });\n        }\n    }\n    getModel() {\n        return this.model;\n    }\n    repaintCanvas(promise) {\n        const { repaintDebounceMs } = this.options;\n        /**\n         * The actual repaint function\n         */\n        const repaint = () => {\n            this.iterateListeners((listener) => {\n                if (listener.repaintCanvas) {\n                    listener.repaintCanvas();\n                }\n            });\n        };\n        // if the `repaintDebounceMs` option is > 0, then apply the debounce\n        let repaintFn = repaint;\n        if (repaintDebounceMs > 0) {\n            repaintFn = lodash_1.debounce(repaint, repaintDebounceMs);\n        }\n        if (promise) {\n            return new Promise((resolve) => {\n                const l = this.registerListener({\n                    rendered: () => {\n                        resolve();\n                        l.deregister();\n                    }\n                });\n                repaintFn();\n            });\n        }\n        repaintFn();\n    }\n    setCanvas(canvas) {\n        if (this.canvas !== canvas) {\n            this.canvas = canvas;\n            if (canvas) {\n                this.fireEvent({}, 'canvasReady');\n            }\n        }\n    }\n    getCanvas() {\n        return this.canvas;\n    }\n    getMouseElement(event) {\n        return null;\n    }\n    zoomToFit() {\n        const xFactor = this.canvas.clientWidth / this.canvas.scrollWidth;\n        const yFactor = this.canvas.clientHeight / this.canvas.scrollHeight;\n        const zoomFactor = xFactor < yFactor ? xFactor : yFactor;\n        this.model.setZoomLevel(this.model.getZoomLevel() * zoomFactor);\n        this.model.setOffset(0, 0);\n        this.repaintCanvas();\n    }\n}\nexports.CanvasEngine = CanvasEngine;\n"},"sourceMaps":{"js":{"version":3,"file":"CanvasEngine.js","sourceRoot":"","sources":["../../src/CanvasEngine.ts"],"names":[],"mappings":"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","sourcesContent":["import { debounce } from 'lodash';\nimport { CanvasModel } from './entities/canvas/CanvasModel';\nimport { FactoryBank } from './core/FactoryBank';\nimport { AbstractReactFactory } from './core/AbstractReactFactory';\nimport { LayerModel } from './entities/layer/LayerModel';\nimport { BaseListener, BaseObserver } from './core/BaseObserver';\nimport { MouseEvent } from 'react';\nimport { BaseModel } from './core-models/BaseModel';\nimport { Point } from '@projectstorm/geometry';\nimport { ActionEventBus } from './core-actions/ActionEventBus';\nimport { ZoomCanvasAction } from './actions/ZoomCanvasAction';\nimport { DeleteItemsAction } from './actions/DeleteItemsAction';\nimport { StateMachine } from './core-state/StateMachine';\n\nexport interface CanvasEngineListener extends BaseListener {\n\tcanvasReady?(): void;\n\n\trepaintCanvas?(): void;\n\n\trendered?(): void;\n}\n\n/**\n * Defines the CanvasEngine options\n */\nexport interface CanvasEngineOptions {\n\tregisterDefaultDeleteItemsAction?: boolean;\n\tregisterDefaultZoomCanvasAction?: boolean;\n\t/**\n\t * Defines the debounce wait time in milliseconds if > 0\n\t */\n\trepaintDebounceMs?: number;\n}\n\nexport class CanvasEngine<\n\tL extends CanvasEngineListener = CanvasEngineListener,\n\tM extends CanvasModel = CanvasModel\n> extends BaseObserver<L> {\n\tprotected model: M;\n\tprotected layerFactories: FactoryBank<AbstractReactFactory<LayerModel>>;\n\tprotected canvas: HTMLDivElement;\n\tprotected eventBus: ActionEventBus;\n\tprotected stateMachine: StateMachine;\n\tprotected options: CanvasEngineOptions;\n\n\tconstructor(options: CanvasEngineOptions = {}) {\n\t\tsuper();\n\t\tthis.model = null;\n\t\tthis.eventBus = new ActionEventBus(this);\n\t\tthis.stateMachine = new StateMachine(this);\n\t\tthis.layerFactories = new FactoryBank();\n\t\tthis.registerFactoryBank(this.layerFactories);\n\n\t\t/**\n\t\t * Overrides the standard options with the possible given options\n\t\t */\n\t\tthis.options = {\n\t\t\tregisterDefaultDeleteItemsAction: true,\n\t\t\tregisterDefaultZoomCanvasAction: true,\n\t\t\trepaintDebounceMs: 0,\n\t\t\t...options\n\t\t};\n\t\tif (this.options.registerDefaultZoomCanvasAction === true) {\n\t\t\tthis.eventBus.registerAction(new ZoomCanvasAction());\n\t\t}\n\t\tif (this.options.registerDefaultDeleteItemsAction === true) {\n\t\t\tthis.eventBus.registerAction(new DeleteItemsAction());\n\t\t}\n\t}\n\n\tgetStateMachine() {\n\t\treturn this.stateMachine;\n\t}\n\n\tgetRelativeMousePoint(event: { clientX: number; clientY: number }): Point {\n\t\tconst point = this.getRelativePoint(event.clientX, event.clientY);\n\t\treturn new Point(\n\t\t\t(point.x - this.model.getOffsetX()) / (this.model.getZoomLevel() / 100.0),\n\t\t\t(point.y - this.model.getOffsetY()) / (this.model.getZoomLevel() / 100.0)\n\t\t);\n\t}\n\n\tgetRelativePoint(x, y): Point {\n\t\tconst canvasRect = this.canvas.getBoundingClientRect();\n\t\treturn new Point(x - canvasRect.left, y - canvasRect.top);\n\t}\n\n\tregisterFactoryBank(factory: FactoryBank) {\n\t\tfactory.registerListener({\n\t\t\tfactoryAdded: (event) => {\n\t\t\t\tevent.factory.setDiagramEngine(this);\n\t\t\t},\n\t\t\tfactoryRemoved: (event) => {\n\t\t\t\tevent.factory.setDiagramEngine(null);\n\t\t\t}\n\t\t});\n\t}\n\n\tgetActionEventBus() {\n\t\treturn this.eventBus;\n\t}\n\n\tgetLayerFactories() {\n\t\treturn this.layerFactories;\n\t}\n\n\tgetFactoryForLayer<F extends AbstractReactFactory<LayerModel>>(layer: LayerModel | string) {\n\t\tif (typeof layer === 'string') {\n\t\t\treturn this.layerFactories.getFactory(layer);\n\t\t}\n\t\treturn this.layerFactories.getFactory(layer.getType());\n\t}\n\n\tsetModel(model: M) {\n\t\tthis.model = model;\n\t\tif (this.canvas) {\n\t\t\trequestAnimationFrame(() => {\n\t\t\t\tthis.repaintCanvas();\n\t\t\t});\n\t\t}\n\t}\n\n\tgetModel(): M {\n\t\treturn this.model;\n\t}\n\n\trepaintCanvas(promise: true): Promise<any>;\n\trepaintCanvas(): void;\n\trepaintCanvas(promise?): Promise<any> | void {\n\t\tconst { repaintDebounceMs } = this.options;\n\n\t\t/**\n\t\t * The actual repaint function\n\t\t */\n\t\tconst repaint = () => {\n\t\t\tthis.iterateListeners((listener) => {\n\t\t\t\tif (listener.repaintCanvas) {\n\t\t\t\t\tlistener.repaintCanvas();\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// if the `repaintDebounceMs` option is > 0, then apply the debounce\n\t\tlet repaintFn = repaint;\n\n\t\tif (repaintDebounceMs > 0) {\n\t\t\trepaintFn = debounce(repaint, repaintDebounceMs);\n\t\t}\n\n\t\tif (promise) {\n\t\t\treturn new Promise((resolve) => {\n\t\t\t\tconst l = this.registerListener({\n\t\t\t\t\trendered: () => {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t\tl.deregister();\n\t\t\t\t\t}\n\t\t\t\t} as L);\n\t\t\t\trepaintFn();\n\t\t\t});\n\t\t}\n\n\t\trepaintFn();\n\t}\n\n\tsetCanvas(canvas?: HTMLDivElement) {\n\t\tif (this.canvas !== canvas) {\n\t\t\tthis.canvas = canvas;\n\t\t\tif (canvas) {\n\t\t\t\tthis.fireEvent({}, 'canvasReady');\n\t\t\t}\n\t\t}\n\t}\n\n\tgetCanvas() {\n\t\treturn this.canvas;\n\t}\n\n\tgetMouseElement(event: MouseEvent): BaseModel {\n\t\treturn null;\n\t}\n\n\tzoomToFit() {\n\t\tconst xFactor = this.canvas.clientWidth / this.canvas.scrollWidth;\n\t\tconst yFactor = this.canvas.clientHeight / this.canvas.scrollHeight;\n\t\tconst zoomFactor = xFactor < yFactor ? xFactor : yFactor;\n\n\t\tthis.model.setZoomLevel(this.model.getZoomLevel() * zoomFactor);\n\t\tthis.model.setOffset(0, 0);\n\t\tthis.repaintCanvas();\n\t}\n}\n"]}},"error":null,"hash":"7bd484d3c8b229acd2aa526e5188f8c2","cacheData":{"env":{}}}