{"id":"../node_modules/@projectstorm/react-diagrams-core/dist/es/models/DiagramModel.js","dependencies":[{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\dist\\es\\models\\DiagramModel.js.map","includedInParent":true,"mtime":1594481777956},{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\src\\models\\DiagramModel.ts","includedInParent":true,"mtime":1594481777956},{"name":"C:\\myprojects\\groupthink\\Groupthink\\package.json","includedInParent":true,"mtime":1594485675900},{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\package.json","includedInParent":true,"mtime":1594481777956},{"name":"lodash","loc":{"line":4,"column":18},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\dist\\es\\models\\DiagramModel.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\lodash\\lodash.js"},{"name":"../entities/link/LinkModel","loc":{"line":5,"column":28},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\dist\\es\\models\\DiagramModel.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\dist\\es\\entities\\link\\LinkModel.js"},{"name":"../entities/node/NodeModel","loc":{"line":6,"column":28},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\dist\\es\\models\\DiagramModel.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\dist\\es\\entities\\node\\NodeModel.js"},{"name":"@projectstorm/react-canvas-core","loc":{"line":7,"column":36},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\dist\\es\\models\\DiagramModel.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-canvas-core\\dist\\es\\index.js"},{"name":"../entities/node-layer/NodeLayerModel","loc":{"line":8,"column":33},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\dist\\es\\models\\DiagramModel.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\dist\\es\\entities\\node-layer\\NodeLayerModel.js"},{"name":"../entities/link-layer/LinkLayerModel","loc":{"line":9,"column":33},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\dist\\es\\models\\DiagramModel.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\dist\\es\\entities\\link-layer\\LinkLayerModel.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DiagramModel = void 0;\nconst _ = require(\"lodash\");\nconst LinkModel_1 = require(\"../entities/link/LinkModel\");\nconst NodeModel_1 = require(\"../entities/node/NodeModel\");\nconst react_canvas_core_1 = require(\"@projectstorm/react-canvas-core\");\nconst NodeLayerModel_1 = require(\"../entities/node-layer/NodeLayerModel\");\nconst LinkLayerModel_1 = require(\"../entities/link-layer/LinkLayerModel\");\nclass DiagramModel extends react_canvas_core_1.CanvasModel {\n    constructor(options = {}) {\n        super(options);\n        this.addLayer(new LinkLayerModel_1.LinkLayerModel());\n        this.addLayer(new NodeLayerModel_1.NodeLayerModel());\n    }\n    deserialize(event) {\n        this.layers = [];\n        super.deserialize(event);\n    }\n    addLayer(layer) {\n        super.addLayer(layer);\n        if (layer instanceof NodeLayerModel_1.NodeLayerModel) {\n            this.activeNodeLayer = layer;\n        }\n        if (layer instanceof LinkLayerModel_1.LinkLayerModel) {\n            this.activeLinkLayer = layer;\n        }\n    }\n    getLinkLayers() {\n        return _.filter(this.layers, (layer) => {\n            return layer instanceof LinkLayerModel_1.LinkLayerModel;\n        });\n    }\n    getNodeLayers() {\n        return _.filter(this.layers, (layer) => {\n            return layer instanceof NodeLayerModel_1.NodeLayerModel;\n        });\n    }\n    getActiveNodeLayer() {\n        if (!this.activeNodeLayer) {\n            const layers = this.getNodeLayers();\n            if (layers.length === 0) {\n                this.addLayer(new NodeLayerModel_1.NodeLayerModel());\n            }\n            else {\n                this.activeNodeLayer = layers[0];\n            }\n        }\n        return this.activeNodeLayer;\n    }\n    getActiveLinkLayer() {\n        if (!this.activeLinkLayer) {\n            const layers = this.getLinkLayers();\n            if (layers.length === 0) {\n                this.addLayer(new NodeLayerModel_1.NodeLayerModel());\n            }\n            else {\n                this.activeLinkLayer = layers[0];\n            }\n        }\n        return this.activeLinkLayer;\n    }\n    getNode(node) {\n        for (const layer of this.getNodeLayers()) {\n            const model = layer.getModel(node);\n            if (model) {\n                return model;\n            }\n        }\n    }\n    getLink(link) {\n        for (const layer of this.getLinkLayers()) {\n            const model = layer.getModel(link);\n            if (model) {\n                return model;\n            }\n        }\n    }\n    addAll(...models) {\n        _.forEach(models, (model) => {\n            if (model instanceof LinkModel_1.LinkModel) {\n                this.addLink(model);\n            }\n            else if (model instanceof NodeModel_1.NodeModel) {\n                this.addNode(model);\n            }\n        });\n        return models;\n    }\n    addLink(link) {\n        this.getActiveLinkLayer().addModel(link);\n        this.fireEvent({\n            link,\n            isCreated: true\n        }, 'linksUpdated');\n        return link;\n    }\n    addNode(node) {\n        this.getActiveNodeLayer().addModel(node);\n        this.fireEvent({ node, isCreated: true }, 'nodesUpdated');\n        return node;\n    }\n    removeLink(link) {\n        const removed = _.some(this.getLinkLayers(), (layer) => {\n            return layer.removeModel(link);\n        });\n        if (removed) {\n            this.fireEvent({ link, isCreated: false }, 'linksUpdated');\n        }\n    }\n    removeNode(node) {\n        const removed = _.some(this.getNodeLayers(), (layer) => {\n            return layer.removeModel(node);\n        });\n        if (removed) {\n            this.fireEvent({ node, isCreated: false }, 'nodesUpdated');\n        }\n    }\n    getLinks() {\n        return _.flatMap(this.getLinkLayers(), (layer) => {\n            return _.values(layer.getModels());\n        });\n    }\n    getNodes() {\n        return _.flatMap(this.getNodeLayers(), (layer) => {\n            return _.values(layer.getModels());\n        });\n    }\n}\nexports.DiagramModel = DiagramModel;\n"},"sourceMaps":{"js":{"version":3,"file":"DiagramModel.js","sourceRoot":"","sources":["../../../src/models/DiagramModel.ts"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash';\nimport { LinkModel } from '../entities/link/LinkModel';\nimport { NodeModel } from '../entities/node/NodeModel';\nimport {\n\tBaseEntityEvent,\n\tBaseEntityListener,\n\tBaseModel,\n\tCanvasModel,\n\tCanvasModelGenerics,\n\tLayerModel,\n\tDeserializeEvent\n} from '@projectstorm/react-canvas-core';\nimport { NodeLayerModel } from '../entities/node-layer/NodeLayerModel';\nimport { LinkLayerModel } from '../entities/link-layer/LinkLayerModel';\n\nexport interface DiagramListener extends BaseEntityListener {\n\tnodesUpdated?(event: BaseEntityEvent & { node: NodeModel; isCreated: boolean }): void;\n\n\tlinksUpdated?(event: BaseEntityEvent & { link: LinkModel; isCreated: boolean }): void;\n}\n\nexport interface DiagramModelGenerics extends CanvasModelGenerics {\n\tLISTENER: DiagramListener;\n}\n\nexport class DiagramModel<G extends DiagramModelGenerics = DiagramModelGenerics> extends CanvasModel<G> {\n\tprotected activeNodeLayer: NodeLayerModel;\n\tprotected activeLinkLayer: LinkLayerModel;\n\n\tconstructor(options: G['OPTIONS'] = {}) {\n\t\tsuper(options);\n\t\tthis.addLayer(new LinkLayerModel());\n\t\tthis.addLayer(new NodeLayerModel());\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tthis.layers = [];\n\t\tsuper.deserialize(event);\n\t}\n\n\taddLayer(layer: LayerModel): void {\n\t\tsuper.addLayer(layer);\n\t\tif (layer instanceof NodeLayerModel) {\n\t\t\tthis.activeNodeLayer = layer;\n\t\t}\n\t\tif (layer instanceof LinkLayerModel) {\n\t\t\tthis.activeLinkLayer = layer;\n\t\t}\n\t}\n\n\tgetLinkLayers(): LinkLayerModel[] {\n\t\treturn _.filter(this.layers, (layer) => {\n\t\t\treturn layer instanceof LinkLayerModel;\n\t\t}) as LinkLayerModel[];\n\t}\n\n\tgetNodeLayers(): NodeLayerModel[] {\n\t\treturn _.filter(this.layers, (layer) => {\n\t\t\treturn layer instanceof NodeLayerModel;\n\t\t}) as NodeLayerModel[];\n\t}\n\n\tgetActiveNodeLayer(): NodeLayerModel {\n\t\tif (!this.activeNodeLayer) {\n\t\t\tconst layers = this.getNodeLayers();\n\t\t\tif (layers.length === 0) {\n\t\t\t\tthis.addLayer(new NodeLayerModel());\n\t\t\t} else {\n\t\t\t\tthis.activeNodeLayer = layers[0];\n\t\t\t}\n\t\t}\n\t\treturn this.activeNodeLayer;\n\t}\n\n\tgetActiveLinkLayer(): LinkLayerModel {\n\t\tif (!this.activeLinkLayer) {\n\t\t\tconst layers = this.getLinkLayers();\n\t\t\tif (layers.length === 0) {\n\t\t\t\tthis.addLayer(new NodeLayerModel());\n\t\t\t} else {\n\t\t\t\tthis.activeLinkLayer = layers[0];\n\t\t\t}\n\t\t}\n\t\treturn this.activeLinkLayer;\n\t}\n\n\tgetNode(node: string): NodeModel {\n\t\tfor (const layer of this.getNodeLayers()) {\n\t\t\tconst model = layer.getModel(node);\n\t\t\tif (model) {\n\t\t\t\treturn model;\n\t\t\t}\n\t\t}\n\t}\n\n\tgetLink(link: string): LinkModel {\n\t\tfor (const layer of this.getLinkLayers()) {\n\t\t\tconst model = layer.getModel(link);\n\t\t\tif (model) {\n\t\t\t\treturn model;\n\t\t\t}\n\t\t}\n\t}\n\n\taddAll(...models: BaseModel[]): BaseModel[] {\n\t\t_.forEach(models, (model) => {\n\t\t\tif (model instanceof LinkModel) {\n\t\t\t\tthis.addLink(model);\n\t\t\t} else if (model instanceof NodeModel) {\n\t\t\t\tthis.addNode(model);\n\t\t\t}\n\t\t});\n\t\treturn models;\n\t}\n\n\taddLink(link: LinkModel): LinkModel {\n\t\tthis.getActiveLinkLayer().addModel(link);\n\t\tthis.fireEvent(\n\t\t\t{\n\t\t\t\tlink,\n\t\t\t\tisCreated: true\n\t\t\t},\n\t\t\t'linksUpdated'\n\t\t);\n\t\treturn link;\n\t}\n\n\taddNode(node: NodeModel): NodeModel {\n\t\tthis.getActiveNodeLayer().addModel(node);\n\t\tthis.fireEvent({ node, isCreated: true }, 'nodesUpdated');\n\t\treturn node;\n\t}\n\n\tremoveLink(link: LinkModel) {\n\t\tconst removed = _.some(this.getLinkLayers(), (layer) => {\n\t\t\treturn layer.removeModel(link);\n\t\t});\n\t\tif (removed) {\n\t\t\tthis.fireEvent({ link, isCreated: false }, 'linksUpdated');\n\t\t}\n\t}\n\n\tremoveNode(node: NodeModel) {\n\t\tconst removed = _.some(this.getNodeLayers(), (layer) => {\n\t\t\treturn layer.removeModel(node);\n\t\t});\n\t\tif (removed) {\n\t\t\tthis.fireEvent({ node, isCreated: false }, 'nodesUpdated');\n\t\t}\n\t}\n\n\tgetLinks(): LinkModel[] {\n\t\treturn _.flatMap(this.getLinkLayers(), (layer) => {\n\t\t\treturn _.values(layer.getModels());\n\t\t});\n\t}\n\n\tgetNodes(): NodeModel[] {\n\t\treturn _.flatMap(this.getNodeLayers(), (layer) => {\n\t\t\treturn _.values(layer.getModels());\n\t\t});\n\t}\n}\n"]}},"error":null,"hash":"1509860b7fa1f40f70b5c2d1502d2384","cacheData":{"env":{}}}