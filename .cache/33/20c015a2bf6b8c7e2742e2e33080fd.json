{"id":"../node_modules/@projectstorm/geometry/dist/es/Rectangle.js","dependencies":[{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\geometry\\dist\\es\\Rectangle.js.map","includedInParent":true,"mtime":1594481777974},{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\geometry\\src\\Rectangle.ts","includedInParent":true,"mtime":1594481777974},{"name":"C:\\myprojects\\groupthink\\Groupthink\\package.json","includedInParent":true,"mtime":1594485675900},{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\geometry\\package.json","includedInParent":true,"mtime":1594481777974},{"name":"./Point","loc":{"line":4,"column":24},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\geometry\\dist\\es\\Rectangle.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\geometry\\dist\\es\\Point.js"},{"name":"./Polygon","loc":{"line":5,"column":26},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\geometry\\dist\\es\\Rectangle.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\geometry\\dist\\es\\Polygon.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Rectangle = void 0;\nconst Point_1 = require(\"./Point\");\nconst Polygon_1 = require(\"./Polygon\");\nclass Rectangle extends Polygon_1.Polygon {\n    constructor(a = 0, b = 0, c = 0, d = 0) {\n        if (a instanceof Point_1.Point && b instanceof Point_1.Point && c instanceof Point_1.Point && d instanceof Point_1.Point) {\n            super([a, b, c, d]);\n        }\n        else if (a instanceof Point_1.Point) {\n            super([a, new Point_1.Point(a.x + b, a.y), new Point_1.Point(a.x + b, a.y + c), new Point_1.Point(a.x, a.y + c)]);\n        }\n        else {\n            super(Rectangle.pointsFromBounds(a, b, c, d));\n        }\n    }\n    static pointsFromBounds(x, y, width, height) {\n        return [new Point_1.Point(x, y), new Point_1.Point(x + width, y), new Point_1.Point(x + width, y + height), new Point_1.Point(x, y + height)];\n    }\n    updateDimensions(x, y, width, height) {\n        this.points = Rectangle.pointsFromBounds(x, y, width, height);\n    }\n    setPoints(points) {\n        if (points.length !== 4) {\n            throw 'Rectangles must always have 4 points';\n        }\n        super.setPoints(points);\n    }\n    containsPoint(point) {\n        const tl = this.getTopLeft();\n        const br = this.getBottomRight();\n        return point.x >= tl.x && point.x <= br.x && point.y >= tl.y && point.y <= br.y;\n    }\n    getWidth() {\n        return Math.sqrt(Math.pow(this.getTopLeft().x - this.getTopRight().x, 2) + Math.pow(this.getTopLeft().y - this.getTopRight().y, 2));\n    }\n    getHeight() {\n        return Math.sqrt(Math.pow(this.getBottomLeft().x - this.getTopLeft().x, 2) +\n            Math.pow(this.getBottomLeft().y - this.getTopLeft().y, 2));\n    }\n    getTopMiddle() {\n        return Point_1.Point.middlePoint(this.getTopLeft(), this.getTopRight());\n    }\n    getBottomMiddle() {\n        return Point_1.Point.middlePoint(this.getBottomLeft(), this.getBottomRight());\n    }\n    getLeftMiddle() {\n        return Point_1.Point.middlePoint(this.getBottomLeft(), this.getTopLeft());\n    }\n    getRightMiddle() {\n        return Point_1.Point.middlePoint(this.getBottomRight(), this.getTopRight());\n    }\n    getTopLeft() {\n        return this.points[0];\n    }\n    getTopRight() {\n        return this.points[1];\n    }\n    getBottomRight() {\n        return this.points[2];\n    }\n    getBottomLeft() {\n        return this.points[3];\n    }\n}\nexports.Rectangle = Rectangle;\n"},"sourceMaps":{"js":{"version":3,"file":"Rectangle.js","sourceRoot":"","sources":["../../src/Rectangle.ts"],"names":[],"mappings":"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","sourcesContent":["import { Point } from './Point';\nimport { Polygon } from './Polygon';\n\nexport class Rectangle extends Polygon {\n\tconstructor(tl: Point, tr: Point, br: Point, bl: Point);\n\tconstructor(position: Point, width: number, height: number);\n\tconstructor(x?: number, y?: number, width?: number, height?: number);\n\n\tconstructor(a: any = 0, b: any = 0, c: any = 0, d: any = 0) {\n\t\tif (a instanceof Point && b instanceof Point && c instanceof Point && d instanceof Point) {\n\t\t\tsuper([a, b, c, d]);\n\t\t} else if (a instanceof Point) {\n\t\t\tsuper([a, new Point(a.x + b, a.y), new Point(a.x + b, a.y + c), new Point(a.x, a.y + c)]);\n\t\t} else {\n\t\t\tsuper(Rectangle.pointsFromBounds(a, b, c, d));\n\t\t}\n\t}\n\n\tstatic pointsFromBounds(x: number, y: number, width: number, height: number): Point[] {\n\t\treturn [new Point(x, y), new Point(x + width, y), new Point(x + width, y + height), new Point(x, y + height)];\n\t}\n\n\tupdateDimensions(x: number, y: number, width: number, height: number) {\n\t\tthis.points = Rectangle.pointsFromBounds(x, y, width, height);\n\t}\n\n\tsetPoints(points: Point[]) {\n\t\tif (points.length !== 4) {\n\t\t\tthrow 'Rectangles must always have 4 points';\n\t\t}\n\t\tsuper.setPoints(points);\n\t}\n\n\tcontainsPoint(point: Point) {\n\t\tconst tl = this.getTopLeft();\n\t\tconst br = this.getBottomRight();\n\n\t\treturn point.x >= tl.x && point.x <= br.x && point.y >= tl.y && point.y <= br.y;\n\t}\n\n\tgetWidth(): number {\n\t\treturn Math.sqrt(\n\t\t\tMath.pow(this.getTopLeft().x - this.getTopRight().x, 2) + Math.pow(this.getTopLeft().y - this.getTopRight().y, 2)\n\t\t);\n\t}\n\n\tgetHeight(): number {\n\t\treturn Math.sqrt(\n\t\t\tMath.pow(this.getBottomLeft().x - this.getTopLeft().x, 2) +\n\t\t\t\tMath.pow(this.getBottomLeft().y - this.getTopLeft().y, 2)\n\t\t);\n\t}\n\n\tgetTopMiddle(): Point {\n\t\treturn Point.middlePoint(this.getTopLeft(), this.getTopRight());\n\t}\n\n\tgetBottomMiddle(): Point {\n\t\treturn Point.middlePoint(this.getBottomLeft(), this.getBottomRight());\n\t}\n\n\tgetLeftMiddle(): Point {\n\t\treturn Point.middlePoint(this.getBottomLeft(), this.getTopLeft());\n\t}\n\n\tgetRightMiddle(): Point {\n\t\treturn Point.middlePoint(this.getBottomRight(), this.getTopRight());\n\t}\n\n\tgetTopLeft(): Point {\n\t\treturn this.points[0];\n\t}\n\n\tgetTopRight(): Point {\n\t\treturn this.points[1];\n\t}\n\n\tgetBottomRight(): Point {\n\t\treturn this.points[2];\n\t}\n\n\tgetBottomLeft(): Point {\n\t\treturn this.points[3];\n\t}\n}\n"]}},"error":null,"hash":"b8e9eedcb5f0cafe6c41ba201ee31a63","cacheData":{"env":{}}}