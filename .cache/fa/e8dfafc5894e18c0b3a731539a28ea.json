{"id":"../node_modules/@projectstorm/react-diagrams-core/dist/es/entities/node/NodeWidget.js","dependencies":[{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\dist\\es\\entities\\node\\NodeWidget.js.map","includedInParent":true,"mtime":1594481777956},{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\src\\entities\\node\\NodeWidget.tsx","includedInParent":true,"mtime":1594481777956},{"name":"C:\\myprojects\\groupthink\\Groupthink\\package.json","includedInParent":true,"mtime":1594485675900},{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\package.json","includedInParent":true,"mtime":1594481777956},{"name":"react","loc":{"line":4,"column":22},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\dist\\es\\entities\\node\\NodeWidget.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\react\\index.js"},{"name":"lodash","loc":{"line":5,"column":18},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\dist\\es\\entities\\node\\NodeWidget.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\lodash\\lodash.js"},{"name":"@projectstorm/react-canvas-core","loc":{"line":6,"column":36},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\dist\\es\\entities\\node\\NodeWidget.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-canvas-core\\dist\\es\\index.js"},{"name":"@emotion/styled","loc":{"line":7,"column":25},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\dist\\es\\entities\\node\\NodeWidget.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@emotion\\styled\\dist\\styled.browser.esm.js"},{"name":"resize-observer-polyfill","loc":{"line":8,"column":43},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\dist\\es\\entities\\node\\NodeWidget.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\resize-observer-polyfill\\dist\\ResizeObserver.es.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeWidget = void 0;\nconst React = require(\"react\");\nconst _ = require(\"lodash\");\nconst react_canvas_core_1 = require(\"@projectstorm/react-canvas-core\");\nconst styled_1 = require(\"@emotion/styled\");\nconst resize_observer_polyfill_1 = require(\"resize-observer-polyfill\");\nvar S;\n(function (S) {\n    S.Node = styled_1.default.div `\n\t\tposition: absolute;\n\t\t-webkit-touch-callout: none; /* iOS Safari */\n\t\t-webkit-user-select: none; /* Chrome/Safari/Opera */\n\t\tuser-select: none;\n\t\tcursor: move;\n\t\tpointer-events: all;\n\t`;\n})(S || (S = {}));\nclass NodeWidget extends React.Component {\n    constructor(props) {\n        super(props);\n        this.ref = React.createRef();\n    }\n    componentWillUnmount() {\n        this.ob.disconnect();\n        this.ob = null;\n        this.listener.deregister();\n        this.listener = null;\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.listener && this.props.node !== prevProps.node) {\n            this.listener.deregister();\n            this.installSelectionListener();\n        }\n    }\n    installSelectionListener() {\n        this.listener = this.props.node.registerListener({\n            selectionChanged: (event) => {\n                this.forceUpdate();\n            }\n        });\n    }\n    componentDidMount() {\n        // @ts-ignore\n        this.ob = new resize_observer_polyfill_1.default((entities) => {\n            const bounds = entities[0].contentRect;\n            this.props.node.updateDimensions({ width: bounds.width, height: bounds.height });\n            //now mark the links as dirty\n            _.forEach(this.props.node.getPorts(), (port) => {\n                port.updateCoords(this.props.diagramEngine.getPortCoords(port));\n            });\n        });\n        this.ob.observe(this.ref.current);\n        this.installSelectionListener();\n    }\n    render() {\n        return (React.createElement(react_canvas_core_1.PeformanceWidget, { model: this.props.node, serialized: this.props.node.serialize() }, () => {\n            return (React.createElement(S.Node, { className: \"node\", ref: this.ref, \"data-nodeid\": this.props.node.getID(), style: {\n                    top: this.props.node.getY(),\n                    left: this.props.node.getX()\n                } }, this.props.diagramEngine.generateWidgetForNode(this.props.node)));\n        }));\n    }\n}\nexports.NodeWidget = NodeWidget;\n"},"sourceMaps":{"js":{"version":3,"file":"NodeWidget.js","sourceRoot":"","sources":["../../../../src/entities/node/NodeWidget.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { DiagramEngine } from '../../DiagramEngine';\nimport { NodeModel } from './NodeModel';\nimport { BaseEntityEvent, BaseModel, ListenerHandle, PeformanceWidget } from '@projectstorm/react-canvas-core';\nimport styled from '@emotion/styled';\nimport ResizeObserver from 'resize-observer-polyfill';\n\nexport interface NodeProps {\n\tnode: NodeModel;\n\tchildren?: any;\n\tdiagramEngine: DiagramEngine;\n}\n\nnamespace S {\n\texport const Node = styled.div`\n\t\tposition: absolute;\n\t\t-webkit-touch-callout: none; /* iOS Safari */\n\t\t-webkit-user-select: none; /* Chrome/Safari/Opera */\n\t\tuser-select: none;\n\t\tcursor: move;\n\t\tpointer-events: all;\n\t`;\n}\n\nexport class NodeWidget extends React.Component<NodeProps> {\n\tob: any;\n\tref: React.RefObject<HTMLDivElement>;\n\tlistener: ListenerHandle;\n\n\tconstructor(props: NodeProps) {\n\t\tsuper(props);\n\t\tthis.ref = React.createRef();\n\t}\n\n\tcomponentWillUnmount(): void {\n\t\tthis.ob.disconnect();\n\t\tthis.ob = null;\n\n\t\tthis.listener.deregister();\n\t\tthis.listener = null;\n\t}\n\n\tcomponentDidUpdate(prevProps: Readonly<NodeProps>, prevState: Readonly<any>, snapshot?: any): void {\n\t\tif (this.listener && this.props.node !== prevProps.node) {\n\t\t\tthis.listener.deregister();\n\t\t\tthis.installSelectionListener();\n\t\t}\n\t}\n\n\tinstallSelectionListener() {\n\t\tthis.listener = this.props.node.registerListener({\n\t\t\tselectionChanged: (event: BaseEntityEvent<BaseModel> & { isSelected: boolean }) => {\n\t\t\t\tthis.forceUpdate();\n\t\t\t}\n\t\t});\n\t}\n\n\tcomponentDidMount(): void {\n\t\t// @ts-ignore\n\t\tthis.ob = new ResizeObserver((entities) => {\n\t\t\tconst bounds = entities[0].contentRect;\n\t\t\tthis.props.node.updateDimensions({ width: bounds.width, height: bounds.height });\n\n\t\t\t//now mark the links as dirty\n\t\t\t_.forEach(this.props.node.getPorts(), (port) => {\n\t\t\t\tport.updateCoords(this.props.diagramEngine.getPortCoords(port));\n\t\t\t});\n\t\t});\n\t\tthis.ob.observe(this.ref.current);\n\t\tthis.installSelectionListener();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<PeformanceWidget model={this.props.node} serialized={this.props.node.serialize()}>\n\t\t\t\t{() => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<S.Node\n\t\t\t\t\t\t\tclassName=\"node\"\n\t\t\t\t\t\t\tref={this.ref}\n\t\t\t\t\t\t\tdata-nodeid={this.props.node.getID()}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\ttop: this.props.node.getY(),\n\t\t\t\t\t\t\t\tleft: this.props.node.getX()\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{this.props.diagramEngine.generateWidgetForNode(this.props.node)}\n\t\t\t\t\t\t</S.Node>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t</PeformanceWidget>\n\t\t);\n\t}\n}\n"]}},"error":null,"hash":"06c3aa9e7b3969710e39ac93c940390b","cacheData":{"env":{}}}