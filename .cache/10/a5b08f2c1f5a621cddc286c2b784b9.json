{"id":"../node_modules/@projectstorm/react-diagrams-defaults/dist/es/link/DefaultLinkWidget.js","dependencies":[{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-defaults\\dist\\es\\link\\DefaultLinkWidget.js.map","includedInParent":true,"mtime":1594481777940},{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-defaults\\src\\link\\DefaultLinkWidget.tsx","includedInParent":true,"mtime":1594481777940},{"name":"C:\\myprojects\\groupthink\\Groupthink\\package.json","includedInParent":true,"mtime":1594485675900},{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-defaults\\package.json","includedInParent":true,"mtime":1594481777940},{"name":"react","loc":{"line":4,"column":22},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-defaults\\dist\\es\\link\\DefaultLinkWidget.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\react\\index.js"},{"name":"@projectstorm/react-diagrams-core","loc":{"line":5,"column":38},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-defaults\\dist\\es\\link\\DefaultLinkWidget.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\dist\\es\\index.js"},{"name":"./DefaultLinkPointWidget","loc":{"line":6,"column":41},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-defaults\\dist\\es\\link\\DefaultLinkWidget.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-defaults\\dist\\es\\link\\DefaultLinkPointWidget.js"},{"name":"./DefaultLinkSegmentWidget","loc":{"line":7,"column":43},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-defaults\\dist\\es\\link\\DefaultLinkWidget.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-defaults\\dist\\es\\link\\DefaultLinkSegmentWidget.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultLinkWidget = void 0;\nconst React = require(\"react\");\nconst react_diagrams_core_1 = require(\"@projectstorm/react-diagrams-core\");\nconst DefaultLinkPointWidget_1 = require(\"./DefaultLinkPointWidget\");\nconst DefaultLinkSegmentWidget_1 = require(\"./DefaultLinkSegmentWidget\");\nclass DefaultLinkWidget extends React.Component {\n    constructor(props) {\n        super(props);\n        this.refPaths = [];\n        this.state = {\n            selected: false\n        };\n    }\n    componentDidUpdate() {\n        this.props.link.setRenderedPaths(this.refPaths.map((ref) => {\n            return ref.current;\n        }));\n    }\n    componentDidMount() {\n        this.props.link.setRenderedPaths(this.refPaths.map((ref) => {\n            return ref.current;\n        }));\n    }\n    componentWillUnmount() {\n        this.props.link.setRenderedPaths([]);\n    }\n    addPointToLink(event, index) {\n        if (!event.shiftKey &&\n            !this.props.link.isLocked() &&\n            this.props.link.getPoints().length - 1 <= this.props.diagramEngine.getMaxNumberPointsPerLink()) {\n            const point = new react_diagrams_core_1.PointModel({\n                link: this.props.link,\n                position: this.props.diagramEngine.getRelativeMousePoint(event)\n            });\n            this.props.link.addPoint(point, index);\n            event.persist();\n            event.stopPropagation();\n            this.forceUpdate(() => {\n                this.props.diagramEngine.getActionEventBus().fireAction({\n                    event,\n                    model: point\n                });\n            });\n        }\n    }\n    generatePoint(point) {\n        return (React.createElement(DefaultLinkPointWidget_1.DefaultLinkPointWidget, { key: point.getID(), point: point, colorSelected: this.props.link.getOptions().selectedColor, color: this.props.link.getOptions().color }));\n    }\n    generateLink(path, extraProps, id) {\n        const ref = React.createRef();\n        this.refPaths.push(ref);\n        return (React.createElement(DefaultLinkSegmentWidget_1.DefaultLinkSegmentWidget, { key: `link-${id}`, path: path, selected: this.state.selected, diagramEngine: this.props.diagramEngine, factory: this.props.diagramEngine.getFactoryForLink(this.props.link), link: this.props.link, forwardRef: ref, onSelection: (selected) => {\n                this.setState({ selected: selected });\n            }, extras: extraProps }));\n    }\n    render() {\n        //ensure id is present for all points on the path\n        var points = this.props.link.getPoints();\n        var paths = [];\n        this.refPaths = [];\n        if (points.length === 2) {\n            paths.push(this.generateLink(this.props.link.getSVGPath(), {\n                onMouseDown: (event) => {\n                    this.addPointToLink(event, 1);\n                }\n            }, '0'));\n            // draw the link as dangeling\n            if (this.props.link.getTargetPort() == null) {\n                paths.push(this.generatePoint(points[1]));\n            }\n        }\n        else {\n            //draw the multiple anchors and complex line instead\n            for (let j = 0; j < points.length - 1; j++) {\n                paths.push(this.generateLink(react_diagrams_core_1.LinkWidget.generateLinePath(points[j], points[j + 1]), {\n                    'data-linkid': this.props.link.getID(),\n                    'data-point': j,\n                    onMouseDown: (event) => {\n                        this.addPointToLink(event, j + 1);\n                    }\n                }, j));\n            }\n            //render the circles\n            for (let i = 1; i < points.length - 1; i++) {\n                paths.push(this.generatePoint(points[i]));\n            }\n            if (this.props.link.getTargetPort() == null) {\n                paths.push(this.generatePoint(points[points.length - 1]));\n            }\n        }\n        return React.createElement(\"g\", { \"data-default-link-test\": this.props.link.getOptions().testName }, paths);\n    }\n}\nexports.DefaultLinkWidget = DefaultLinkWidget;\n"},"sourceMaps":{"js":{"version":3,"file":"DefaultLinkWidget.js","sourceRoot":"","sources":["../../../src/link/DefaultLinkWidget.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { DiagramEngine, LinkWidget, PointModel } from '@projectstorm/react-diagrams-core';\nimport { DefaultLinkModel } from './DefaultLinkModel';\nimport { DefaultLinkPointWidget } from './DefaultLinkPointWidget';\nimport { DefaultLinkSegmentWidget } from './DefaultLinkSegmentWidget';\nimport { MouseEvent } from 'react';\n\nexport interface DefaultLinkProps {\n\tlink: DefaultLinkModel;\n\tdiagramEngine: DiagramEngine;\n\tpointAdded?: (point: PointModel, event: MouseEvent) => any;\n}\n\nexport interface DefaultLinkState {\n\tselected: boolean;\n}\n\nexport class DefaultLinkWidget extends React.Component<DefaultLinkProps, DefaultLinkState> {\n\trefPaths: React.RefObject<SVGPathElement>[];\n\n\tconstructor(props: DefaultLinkProps) {\n\t\tsuper(props);\n\t\tthis.refPaths = [];\n\t\tthis.state = {\n\t\t\tselected: false\n\t\t};\n\t}\n\n\tcomponentDidUpdate(): void {\n\t\tthis.props.link.setRenderedPaths(\n\t\t\tthis.refPaths.map((ref) => {\n\t\t\t\treturn ref.current;\n\t\t\t})\n\t\t);\n\t}\n\n\tcomponentDidMount(): void {\n\t\tthis.props.link.setRenderedPaths(\n\t\t\tthis.refPaths.map((ref) => {\n\t\t\t\treturn ref.current;\n\t\t\t})\n\t\t);\n\t}\n\n\tcomponentWillUnmount(): void {\n\t\tthis.props.link.setRenderedPaths([]);\n\t}\n\n\taddPointToLink(event: MouseEvent, index: number) {\n\t\tif (\n\t\t\t!event.shiftKey &&\n\t\t\t!this.props.link.isLocked() &&\n\t\t\tthis.props.link.getPoints().length - 1 <= this.props.diagramEngine.getMaxNumberPointsPerLink()\n\t\t) {\n\t\t\tconst point = new PointModel({\n\t\t\t\tlink: this.props.link,\n\t\t\t\tposition: this.props.diagramEngine.getRelativeMousePoint(event)\n\t\t\t});\n\t\t\tthis.props.link.addPoint(point, index);\n\t\t\tevent.persist();\n\t\t\tevent.stopPropagation();\n\t\t\tthis.forceUpdate(() => {\n\t\t\t\tthis.props.diagramEngine.getActionEventBus().fireAction({\n\t\t\t\t\tevent,\n\t\t\t\t\tmodel: point\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\tgeneratePoint(point: PointModel): JSX.Element {\n\t\treturn (\n\t\t\t<DefaultLinkPointWidget\n\t\t\t\tkey={point.getID()}\n\t\t\t\tpoint={point as any}\n\t\t\t\tcolorSelected={this.props.link.getOptions().selectedColor}\n\t\t\t\tcolor={this.props.link.getOptions().color}\n\t\t\t/>\n\t\t);\n\t}\n\n\tgenerateLink(path: string, extraProps: any, id: string | number): JSX.Element {\n\t\tconst ref = React.createRef<SVGPathElement>();\n\t\tthis.refPaths.push(ref);\n\t\treturn (\n\t\t\t<DefaultLinkSegmentWidget\n\t\t\t\tkey={`link-${id}`}\n\t\t\t\tpath={path}\n\t\t\t\tselected={this.state.selected}\n\t\t\t\tdiagramEngine={this.props.diagramEngine}\n\t\t\t\tfactory={this.props.diagramEngine.getFactoryForLink(this.props.link)}\n\t\t\t\tlink={this.props.link}\n\t\t\t\tforwardRef={ref}\n\t\t\t\tonSelection={(selected) => {\n\t\t\t\t\tthis.setState({ selected: selected });\n\t\t\t\t}}\n\t\t\t\textras={extraProps}\n\t\t\t/>\n\t\t);\n\t}\n\n\trender() {\n\t\t//ensure id is present for all points on the path\n\t\tvar points = this.props.link.getPoints();\n\t\tvar paths = [];\n\t\tthis.refPaths = [];\n\n\t\tif (points.length === 2) {\n\t\t\tpaths.push(\n\t\t\t\tthis.generateLink(\n\t\t\t\t\tthis.props.link.getSVGPath(),\n\t\t\t\t\t{\n\t\t\t\t\t\tonMouseDown: (event) => {\n\t\t\t\t\t\t\tthis.addPointToLink(event, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'0'\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t// draw the link as dangeling\n\t\t\tif (this.props.link.getTargetPort() == null) {\n\t\t\t\tpaths.push(this.generatePoint(points[1]));\n\t\t\t}\n\t\t} else {\n\t\t\t//draw the multiple anchors and complex line instead\n\t\t\tfor (let j = 0; j < points.length - 1; j++) {\n\t\t\t\tpaths.push(\n\t\t\t\t\tthis.generateLink(\n\t\t\t\t\t\tLinkWidget.generateLinePath(points[j], points[j + 1]),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'data-linkid': this.props.link.getID(),\n\t\t\t\t\t\t\t'data-point': j,\n\t\t\t\t\t\t\tonMouseDown: (event: MouseEvent) => {\n\t\t\t\t\t\t\t\tthis.addPointToLink(event, j + 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tj\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t//render the circles\n\t\t\tfor (let i = 1; i < points.length - 1; i++) {\n\t\t\t\tpaths.push(this.generatePoint(points[i]));\n\t\t\t}\n\n\t\t\tif (this.props.link.getTargetPort() == null) {\n\t\t\t\tpaths.push(this.generatePoint(points[points.length - 1]));\n\t\t\t}\n\t\t}\n\n\t\treturn <g data-default-link-test={this.props.link.getOptions().testName}>{paths}</g>;\n\t}\n}\n"]}},"error":null,"hash":"3e9f2647a7950e72c1d8a85d6d03ff40","cacheData":{"env":{}}}