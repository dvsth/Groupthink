{"id":"../node_modules/@projectstorm/react-diagrams-defaults/dist/es/link/DefaultLinkPointWidget.js","dependencies":[{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-defaults\\dist\\es\\link\\DefaultLinkPointWidget.js.map","includedInParent":true,"mtime":1594481777940},{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-defaults\\src\\link\\DefaultLinkPointWidget.tsx","includedInParent":true,"mtime":1594481777940},{"name":"C:\\myprojects\\groupthink\\Groupthink\\package.json","includedInParent":true,"mtime":1594485675900},{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-defaults\\package.json","includedInParent":true,"mtime":1594481777940},{"name":"react","loc":{"line":4,"column":22},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-defaults\\dist\\es\\link\\DefaultLinkPointWidget.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\react\\index.js"},{"name":"@emotion/styled","loc":{"line":5,"column":25},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-defaults\\dist\\es\\link\\DefaultLinkPointWidget.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@emotion\\styled\\dist\\styled.browser.esm.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultLinkPointWidget = void 0;\nconst React = require(\"react\");\nconst styled_1 = require(\"@emotion/styled\");\nvar S;\n(function (S) {\n    S.PointTop = styled_1.default.circle `\n\t\tpointer-events: all;\n\t`;\n})(S || (S = {}));\nclass DefaultLinkPointWidget extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selected: false\n        };\n    }\n    render() {\n        const { point } = this.props;\n        return (React.createElement(\"g\", null,\n            React.createElement(\"circle\", { cx: point.getPosition().x, cy: point.getPosition().y, r: 5, fill: this.state.selected || this.props.point.isSelected() ? this.props.colorSelected : this.props.color }),\n            React.createElement(S.PointTop, { className: \"point\", onMouseLeave: () => {\n                    this.setState({ selected: false });\n                }, onMouseEnter: () => {\n                    this.setState({ selected: true });\n                }, \"data-id\": point.getID(), \"data-linkid\": point.getLink().getID(), cx: point.getPosition().x, cy: point.getPosition().y, r: 15, opacity: 0.0 })));\n    }\n}\nexports.DefaultLinkPointWidget = DefaultLinkPointWidget;\n"},"sourceMaps":{"js":{"version":3,"file":"DefaultLinkPointWidget.js","sourceRoot":"","sources":["../../../src/link/DefaultLinkPointWidget.tsx"],"names":[],"mappings":";;;AAAA,+BAA+B;AAE/B,4CAAqC;AAYrC,IAAU,CAAC,CAIV;AAJD,WAAU,CAAC;IACG,UAAQ,GAAG,gBAAM,CAAC,MAAM,CAAA;;EAEpC,CAAC;AACH,CAAC,EAJS,CAAC,KAAD,CAAC,QAIV;AAED,MAAa,sBAAuB,SAAQ,KAAK,CAAC,SAAmE;IACpH,YAAY,KAAK;QAChB,KAAK,CAAC,KAAK,CAAC,CAAC;QACb,IAAI,CAAC,KAAK,GAAG;YACZ,QAAQ,EAAE,KAAK;SACf,CAAC;IACH,CAAC;IAED,MAAM;QACL,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAC7B,OAAO,CACN;YACC,gCACC,EAAE,EAAE,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,EACzB,EAAE,EAAE,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,EACzB,CAAC,EAAE,CAAC,EACJ,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GACvG;YACF,oBAAC,CAAC,CAAC,QAAQ,IACV,SAAS,EAAC,OAAO,EACjB,YAAY,EAAE,GAAG,EAAE;oBAClB,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;gBACpC,CAAC,EACD,YAAY,EAAE,GAAG,EAAE;oBAClB,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;gBACnC,CAAC,aACQ,KAAK,CAAC,KAAK,EAAE,iBACT,KAAK,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,EACpC,EAAE,EAAE,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,EACzB,EAAE,EAAE,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,EACzB,CAAC,EAAE,EAAE,EACL,OAAO,EAAE,GAAG,GACX,CACC,CACJ,CAAC;IACH,CAAC;CACD;AApCD,wDAoCC","sourcesContent":["import * as React from 'react';\nimport { PointModel } from '@projectstorm/react-diagrams-core';\nimport styled from '@emotion/styled';\n\nexport interface DefaultLinkPointWidgetProps {\n\tpoint: PointModel;\n\tcolor?: string;\n\tcolorSelected: string;\n}\n\nexport interface DefaultLinkPointWidgetState {\n\tselected: boolean;\n}\n\nnamespace S {\n\texport const PointTop = styled.circle`\n\t\tpointer-events: all;\n\t`;\n}\n\nexport class DefaultLinkPointWidget extends React.Component<DefaultLinkPointWidgetProps, DefaultLinkPointWidgetState> {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tselected: false\n\t\t};\n\t}\n\n\trender() {\n\t\tconst { point } = this.props;\n\t\treturn (\n\t\t\t<g>\n\t\t\t\t<circle\n\t\t\t\t\tcx={point.getPosition().x}\n\t\t\t\t\tcy={point.getPosition().y}\n\t\t\t\t\tr={5}\n\t\t\t\t\tfill={this.state.selected || this.props.point.isSelected() ? this.props.colorSelected : this.props.color}\n\t\t\t\t/>\n\t\t\t\t<S.PointTop\n\t\t\t\t\tclassName=\"point\"\n\t\t\t\t\tonMouseLeave={() => {\n\t\t\t\t\t\tthis.setState({ selected: false });\n\t\t\t\t\t}}\n\t\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\t\tthis.setState({ selected: true });\n\t\t\t\t\t}}\n\t\t\t\t\tdata-id={point.getID()}\n\t\t\t\t\tdata-linkid={point.getLink().getID()}\n\t\t\t\t\tcx={point.getPosition().x}\n\t\t\t\t\tcy={point.getPosition().y}\n\t\t\t\t\tr={15}\n\t\t\t\t\topacity={0.0}\n\t\t\t\t/>\n\t\t\t</g>\n\t\t);\n\t}\n}\n"]}},"error":null,"hash":"a403f816206f6e263a48fc12d07062d7","cacheData":{"env":{}}}