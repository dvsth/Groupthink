{"id":"../node_modules/@projectstorm/react-diagrams-routing/dist/es/link/RightAngleLinkModel.js","dependencies":[{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-routing\\dist\\es\\link\\RightAngleLinkModel.js.map","includedInParent":true,"mtime":1594481777960},{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-routing\\src\\link\\RightAngleLinkModel.ts","includedInParent":true,"mtime":1594481777960},{"name":"C:\\myprojects\\groupthink\\Groupthink\\package.json","includedInParent":true,"mtime":1594485675900},{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-routing\\package.json","includedInParent":true,"mtime":1594481777960},{"name":"@projectstorm/react-diagrams-defaults","loc":{"line":4,"column":42},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-routing\\dist\\es\\link\\RightAngleLinkModel.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-defaults\\dist\\es\\index.js"},{"name":"./RightAngleLinkFactory","loc":{"line":5,"column":40},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-routing\\dist\\es\\link\\RightAngleLinkModel.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-routing\\dist\\es\\link\\RightAngleLinkFactory.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RightAngleLinkModel = void 0;\nconst react_diagrams_defaults_1 = require(\"@projectstorm/react-diagrams-defaults\");\nconst RightAngleLinkFactory_1 = require(\"./RightAngleLinkFactory\");\nclass RightAngleLinkModel extends react_diagrams_defaults_1.DefaultLinkModel {\n    constructor(options = {}) {\n        super(Object.assign({ type: RightAngleLinkFactory_1.RightAngleLinkFactory.NAME }, options));\n        this.lastHoverIndexOfPath = 0;\n        this._lastPathXdirection = false;\n        this._firstPathXdirection = false;\n    }\n    setFirstAndLastPathsDirection() {\n        let points = this.getPoints();\n        for (let i = 1; i < points.length; i += points.length - 2) {\n            let dx = Math.abs(points[i].getX() - points[i - 1].getX());\n            let dy = Math.abs(points[i].getY() - points[i - 1].getY());\n            if (i - 1 === 0) {\n                this._firstPathXdirection = dx > dy;\n            }\n            else {\n                this._lastPathXdirection = dx > dy;\n            }\n        }\n    }\n    // @ts-ignore\n    addPoint(pointModel, index = 1) {\n        // @ts-ignore\n        super.addPoint(pointModel, index);\n        this.setFirstAndLastPathsDirection();\n        return pointModel;\n    }\n    deserialize(event) {\n        super.deserialize(event);\n        this.setFirstAndLastPathsDirection();\n    }\n    setManuallyFirstAndLastPathsDirection(first, last) {\n        this._firstPathXdirection = first;\n        this._lastPathXdirection = last;\n    }\n    getLastPathXdirection() {\n        return this._lastPathXdirection;\n    }\n    getFirstPathXdirection() {\n        return this._firstPathXdirection;\n    }\n    setWidth(width) {\n        this.options.width = width;\n        this.fireEvent({ width }, 'widthChanged');\n    }\n    setColor(color) {\n        this.options.color = color;\n        this.fireEvent({ color }, 'colorChanged');\n    }\n}\nexports.RightAngleLinkModel = RightAngleLinkModel;\n"},"sourceMaps":{"js":{"version":3,"file":"RightAngleLinkModel.js","sourceRoot":"","sources":["../../../src/link/RightAngleLinkModel.ts"],"names":[],"mappings":";;;AAAA,mFAAkG;AAClG,mEAAgE;AAIhE,MAAa,mBAAoB,SAAQ,0CAAgB;IAIxD,YAAY,UAAmC,EAAE;QAChD,KAAK,iBACJ,IAAI,EAAE,6CAAqB,CAAC,IAAI,IAC7B,OAAO,EACT,CAAC;QACH,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC;QAC9B,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;QACjC,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;IACnC,CAAC;IAED,6BAA6B;QAC5B,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YAC1D,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;YAC3D,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;YAC3D,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;gBAChB,IAAI,CAAC,oBAAoB,GAAG,EAAE,GAAG,EAAE,CAAC;aACpC;iBAAM;gBACN,IAAI,CAAC,mBAAmB,GAAG,EAAE,GAAG,EAAE,CAAC;aACnC;SACD;IACF,CAAC;IAED,aAAa;IACb,QAAQ,CAAuB,UAAa,EAAE,QAAgB,CAAC;QAC9D,aAAa;QACb,KAAK,CAAC,QAAQ,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QAClC,IAAI,CAAC,6BAA6B,EAAE,CAAC;QACrC,OAAO,UAAU,CAAC;IACnB,CAAC;IAED,WAAW,CAAC,KAA6B;QACxC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACzB,IAAI,CAAC,6BAA6B,EAAE,CAAC;IACtC,CAAC;IAED,qCAAqC,CAAC,KAAK,EAAE,IAAI;QAChD,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;QAClC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;IACjC,CAAC;IAED,qBAAqB;QACpB,OAAO,IAAI,CAAC,mBAAmB,CAAC;IACjC,CAAC;IACD,sBAAsB;QACrB,OAAO,IAAI,CAAC,oBAAoB,CAAC;IAClC,CAAC;IAED,QAAQ,CAAC,KAAa;QACrB,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,EAAE,cAAc,CAAC,CAAC;IAC3C,CAAC;IAED,QAAQ,CAAC,KAAa;QACrB,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,EAAE,cAAc,CAAC,CAAC;IAC3C,CAAC;CACD;AA7DD,kDA6DC","sourcesContent":["import { DefaultLinkModel, DefaultLinkModelOptions } from '@projectstorm/react-diagrams-defaults';\nimport { RightAngleLinkFactory } from './RightAngleLinkFactory';\nimport { PointModel } from '@projectstorm/react-diagrams-core';\nimport { DeserializeEvent } from '@projectstorm/react-canvas-core';\n\nexport class RightAngleLinkModel extends DefaultLinkModel {\n\tlastHoverIndexOfPath: number;\n\tprivate _lastPathXdirection: boolean;\n\tprivate _firstPathXdirection: boolean;\n\tconstructor(options: DefaultLinkModelOptions = {}) {\n\t\tsuper({\n\t\t\ttype: RightAngleLinkFactory.NAME,\n\t\t\t...options\n\t\t});\n\t\tthis.lastHoverIndexOfPath = 0;\n\t\tthis._lastPathXdirection = false;\n\t\tthis._firstPathXdirection = false;\n\t}\n\n\tsetFirstAndLastPathsDirection() {\n\t\tlet points = this.getPoints();\n\t\tfor (let i = 1; i < points.length; i += points.length - 2) {\n\t\t\tlet dx = Math.abs(points[i].getX() - points[i - 1].getX());\n\t\t\tlet dy = Math.abs(points[i].getY() - points[i - 1].getY());\n\t\t\tif (i - 1 === 0) {\n\t\t\t\tthis._firstPathXdirection = dx > dy;\n\t\t\t} else {\n\t\t\t\tthis._lastPathXdirection = dx > dy;\n\t\t\t}\n\t\t}\n\t}\n\n\t// @ts-ignore\n\taddPoint<P extends PointModel>(pointModel: P, index: number = 1): P {\n\t\t// @ts-ignore\n\t\tsuper.addPoint(pointModel, index);\n\t\tthis.setFirstAndLastPathsDirection();\n\t\treturn pointModel;\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.setFirstAndLastPathsDirection();\n\t}\n\n\tsetManuallyFirstAndLastPathsDirection(first, last) {\n\t\tthis._firstPathXdirection = first;\n\t\tthis._lastPathXdirection = last;\n\t}\n\n\tgetLastPathXdirection(): boolean {\n\t\treturn this._lastPathXdirection;\n\t}\n\tgetFirstPathXdirection(): boolean {\n\t\treturn this._firstPathXdirection;\n\t}\n\n\tsetWidth(width: number) {\n\t\tthis.options.width = width;\n\t\tthis.fireEvent({ width }, 'widthChanged');\n\t}\n\n\tsetColor(color: string) {\n\t\tthis.options.color = color;\n\t\tthis.fireEvent({ color }, 'colorChanged');\n\t}\n}\n"]}},"error":null,"hash":"695a46cb5b318174b161084d667d6770","cacheData":{"env":{}}}