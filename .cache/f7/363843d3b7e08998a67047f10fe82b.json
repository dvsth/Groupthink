{"id":"../node_modules/@projectstorm/geometry/dist/es/BezierCurve.js","dependencies":[{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\geometry\\dist\\es\\BezierCurve.js.map","includedInParent":true,"mtime":1594481777974},{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\geometry\\src\\BezierCurve.ts","includedInParent":true,"mtime":1594481777974},{"name":"C:\\myprojects\\groupthink\\Groupthink\\package.json","includedInParent":true,"mtime":1594485675900},{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\geometry\\package.json","includedInParent":true,"mtime":1594481777974},{"name":"./Point","loc":{"line":4,"column":24},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\geometry\\dist\\es\\BezierCurve.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\geometry\\dist\\es\\Point.js"},{"name":"./Polygon","loc":{"line":5,"column":26},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\geometry\\dist\\es\\BezierCurve.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\geometry\\dist\\es\\Polygon.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BezierCurve = exports.BezierCurvepPoints = void 0;\nconst Point_1 = require(\"./Point\");\nconst Polygon_1 = require(\"./Polygon\");\nvar BezierCurvepPoints;\n(function (BezierCurvepPoints) {\n    BezierCurvepPoints[BezierCurvepPoints[\"SOURCE\"] = 0] = \"SOURCE\";\n    BezierCurvepPoints[BezierCurvepPoints[\"SOURCE_CONTROL\"] = 1] = \"SOURCE_CONTROL\";\n    BezierCurvepPoints[BezierCurvepPoints[\"TARGET_CONTROL\"] = 2] = \"TARGET_CONTROL\";\n    BezierCurvepPoints[BezierCurvepPoints[\"TARGET\"] = 3] = \"TARGET\";\n})(BezierCurvepPoints = exports.BezierCurvepPoints || (exports.BezierCurvepPoints = {}));\nclass BezierCurve extends Polygon_1.Polygon {\n    constructor() {\n        super([new Point_1.Point(0, 0), new Point_1.Point(0, 0), new Point_1.Point(0, 0), new Point_1.Point(0, 0)]);\n    }\n    getSVGCurve() {\n        return `M${this.getSource().toSVG()} C${this.getSourceControl().toSVG()}, ${this.getTargetControl().toSVG()}, ${this.getTarget().toSVG()}`;\n    }\n    setPoints(points) {\n        if (points.length !== 4) {\n            throw new Error('BezierCurve must have extactly 4 points');\n        }\n        super.setPoints(points);\n    }\n    getSource() {\n        return this.points[BezierCurvepPoints.SOURCE];\n    }\n    getSourceControl() {\n        return this.points[BezierCurvepPoints.SOURCE_CONTROL];\n    }\n    getTargetControl() {\n        return this.points[BezierCurvepPoints.TARGET_CONTROL];\n    }\n    getTarget() {\n        return this.points[BezierCurvepPoints.TARGET];\n    }\n    setSource(point) {\n        this.points[BezierCurvepPoints.SOURCE] = point;\n    }\n    setSourceControl(point) {\n        this.points[BezierCurvepPoints.SOURCE_CONTROL] = point;\n    }\n    setTargetControl(point) {\n        this.points[BezierCurvepPoints.TARGET_CONTROL] = point;\n    }\n    setTarget(point) {\n        this.points[BezierCurvepPoints.TARGET] = point;\n    }\n}\nexports.BezierCurve = BezierCurve;\n"},"sourceMaps":{"js":{"version":3,"file":"BezierCurve.js","sourceRoot":"","sources":["../../src/BezierCurve.ts"],"names":[],"mappings":";;;AAAA,mCAAgC;AAChC,uCAAoC;AAEpC,IAAY,kBAKX;AALD,WAAY,kBAAkB;IAC7B,+DAAU,CAAA;IACV,+EAAkB,CAAA;IAClB,+EAAkB,CAAA;IAClB,+DAAU,CAAA;AACX,CAAC,EALW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAK7B;AAED,MAAa,WAAY,SAAQ,iBAAO;IACvC;QACC,KAAK,CAAC,CAAC,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,aAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7E,CAAC;IAED,WAAW;QACV,OAAO,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC,KAAK,EAAE,KAAK,IAAI,CAAC,gBAAgB,EAAE,CAAC,KAAK,EAAE,KAAK,IAAI,CAAC,gBAAgB,EAAE,CAAC,KAAK,EAAE,KAAK,IAAI,CAAC,SAAS,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC;IAC5I,CAAC;IAED,SAAS,CAAC,MAAe;QACxB,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YACxB,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC;SAC3D;QACD,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IACzB,CAAC;IAED,SAAS;QACR,OAAO,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;IAC/C,CAAC;IAED,gBAAgB;QACf,OAAO,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,cAAc,CAAC,CAAC;IACvD,CAAC;IAED,gBAAgB;QACf,OAAO,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,cAAc,CAAC,CAAC;IACvD,CAAC;IAED,SAAS;QACR,OAAO,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;IAC/C,CAAC;IAED,SAAS,CAAC,KAAY;QACrB,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC;IAChD,CAAC;IAED,gBAAgB,CAAC,KAAY;QAC5B,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,cAAc,CAAC,GAAG,KAAK,CAAC;IACxD,CAAC;IAED,gBAAgB,CAAC,KAAY;QAC5B,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,cAAc,CAAC,GAAG,KAAK,CAAC;IACxD,CAAC;IAED,SAAS,CAAC,KAAY;QACrB,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC;IAChD,CAAC;CACD;AA/CD,kCA+CC","sourcesContent":["import { Point } from './Point';\nimport { Polygon } from './Polygon';\n\nexport enum BezierCurvepPoints {\n\tSOURCE = 0,\n\tSOURCE_CONTROL = 1,\n\tTARGET_CONTROL = 2,\n\tTARGET = 3\n}\n\nexport class BezierCurve extends Polygon {\n\tconstructor() {\n\t\tsuper([new Point(0, 0), new Point(0, 0), new Point(0, 0), new Point(0, 0)]);\n\t}\n\n\tgetSVGCurve(): string {\n\t\treturn `M${this.getSource().toSVG()} C${this.getSourceControl().toSVG()}, ${this.getTargetControl().toSVG()}, ${this.getTarget().toSVG()}`;\n\t}\n\n\tsetPoints(points: Point[]) {\n\t\tif (points.length !== 4) {\n\t\t\tthrow new Error('BezierCurve must have extactly 4 points');\n\t\t}\n\t\tsuper.setPoints(points);\n\t}\n\n\tgetSource(): Point {\n\t\treturn this.points[BezierCurvepPoints.SOURCE];\n\t}\n\n\tgetSourceControl(): Point {\n\t\treturn this.points[BezierCurvepPoints.SOURCE_CONTROL];\n\t}\n\n\tgetTargetControl(): Point {\n\t\treturn this.points[BezierCurvepPoints.TARGET_CONTROL];\n\t}\n\n\tgetTarget(): Point {\n\t\treturn this.points[BezierCurvepPoints.TARGET];\n\t}\n\n\tsetSource(point: Point) {\n\t\tthis.points[BezierCurvepPoints.SOURCE] = point;\n\t}\n\n\tsetSourceControl(point: Point) {\n\t\tthis.points[BezierCurvepPoints.SOURCE_CONTROL] = point;\n\t}\n\n\tsetTargetControl(point: Point) {\n\t\tthis.points[BezierCurvepPoints.TARGET_CONTROL] = point;\n\t}\n\n\tsetTarget(point: Point) {\n\t\tthis.points[BezierCurvepPoints.TARGET] = point;\n\t}\n}\n"]}},"error":null,"hash":"82fdfd0c8471bfbc496bafe45769c0f8","cacheData":{"env":{}}}