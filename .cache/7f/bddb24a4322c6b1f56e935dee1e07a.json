{"id":"../node_modules/@projectstorm/react-diagrams-defaults/dist/es/port/DefaultPortModel.js","dependencies":[{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-defaults\\dist\\es\\port\\DefaultPortModel.js.map","includedInParent":true,"mtime":1594481777940},{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-defaults\\src\\port\\DefaultPortModel.ts","includedInParent":true,"mtime":1594481777940},{"name":"C:\\myprojects\\groupthink\\Groupthink\\package.json","includedInParent":true,"mtime":1594485675900},{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-defaults\\package.json","includedInParent":true,"mtime":1594481777940},{"name":"@projectstorm/react-diagrams-core","loc":{"line":4,"column":38},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-defaults\\dist\\es\\port\\DefaultPortModel.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\dist\\es\\index.js"},{"name":"../link/DefaultLinkModel","loc":{"line":5,"column":35},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-defaults\\dist\\es\\port\\DefaultPortModel.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-defaults\\dist\\es\\link\\DefaultLinkModel.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultPortModel = void 0;\nconst react_diagrams_core_1 = require(\"@projectstorm/react-diagrams-core\");\nconst DefaultLinkModel_1 = require(\"../link/DefaultLinkModel\");\nclass DefaultPortModel extends react_diagrams_core_1.PortModel {\n    constructor(options, name, label) {\n        if (!!name) {\n            options = {\n                in: !!options,\n                name: name,\n                label: label\n            };\n        }\n        options = options;\n        super(Object.assign({ label: options.label || options.name, alignment: options.in ? react_diagrams_core_1.PortModelAlignment.LEFT : react_diagrams_core_1.PortModelAlignment.RIGHT, type: 'default' }, options));\n    }\n    deserialize(event) {\n        super.deserialize(event);\n        this.options.in = event.data.in;\n        this.options.label = event.data.label;\n    }\n    serialize() {\n        return Object.assign(Object.assign({}, super.serialize()), { in: this.options.in, label: this.options.label });\n    }\n    link(port, factory) {\n        let link = this.createLinkModel(factory);\n        link.setSourcePort(this);\n        link.setTargetPort(port);\n        return link;\n    }\n    canLinkToPort(port) {\n        if (port instanceof DefaultPortModel) {\n            return this.options.in !== port.getOptions().in;\n        }\n        return true;\n    }\n    createLinkModel(factory) {\n        let link = super.createLinkModel();\n        if (!link && factory) {\n            return factory.generateModel({});\n        }\n        return link || new DefaultLinkModel_1.DefaultLinkModel();\n    }\n}\nexports.DefaultPortModel = DefaultPortModel;\n"},"sourceMaps":{"js":{"version":3,"file":"DefaultPortModel.js","sourceRoot":"","sources":["../../../src/port/DefaultPortModel.ts"],"names":[],"mappings":";;;AAAA,2EAM2C;AAC3C,+DAA4D;AAY5D,MAAa,gBAAiB,SAAQ,+BAAmC;IAGxE,YAAY,OAA0C,EAAE,IAAa,EAAE,KAAc;QACpF,IAAI,CAAC,CAAC,IAAI,EAAE;YACX,OAAO,GAAG;gBACT,EAAE,EAAE,CAAC,CAAC,OAAO;gBACb,IAAI,EAAE,IAAI;gBACV,KAAK,EAAE,KAAK;aACZ,CAAC;SACF;QACD,OAAO,GAAG,OAAkC,CAAC;QAC7C,KAAK,iBACJ,KAAK,EAAE,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,IAAI,EACpC,SAAS,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,wCAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,wCAAkB,CAAC,KAAK,EAC1E,IAAI,EAAE,SAAS,IACZ,OAAO,EACT,CAAC;IACJ,CAAC;IAED,WAAW,CAAC,KAA6B;QACxC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;IACvC,CAAC;IAED,SAAS;QACR,uCACI,KAAK,CAAC,SAAS,EAAE,KACpB,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,EACnB,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,IACxB;IACH,CAAC;IAED,IAAI,CAAsB,IAAe,EAAE,OAAiC;QAC3E,IAAI,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QACzC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACzB,OAAO,IAAS,CAAC;IAClB,CAAC;IAED,aAAa,CAAC,IAAe;QAC5B,IAAI,IAAI,YAAY,gBAAgB,EAAE;YACrC,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE,CAAC;SAChD;QACD,OAAO,IAAI,CAAC;IACb,CAAC;IAED,eAAe,CAAC,OAAyC;QACxD,IAAI,IAAI,GAAG,KAAK,CAAC,eAAe,EAAE,CAAC;QACnC,IAAI,CAAC,IAAI,IAAI,OAAO,EAAE;YACrB,OAAO,OAAO,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;SACjC;QACD,OAAO,IAAI,IAAI,IAAI,mCAAgB,EAAE,CAAC;IACvC,CAAC;CACD;AAvDD,4CAuDC","sourcesContent":["import {\n\tLinkModel,\n\tPortModel,\n\tPortModelAlignment,\n\tPortModelGenerics,\n\tPortModelOptions\n} from '@projectstorm/react-diagrams-core';\nimport { DefaultLinkModel } from '../link/DefaultLinkModel';\nimport { AbstractModelFactory, DeserializeEvent } from '@projectstorm/react-canvas-core';\n\nexport interface DefaultPortModelOptions extends PortModelOptions {\n\tlabel?: string;\n\tin?: boolean;\n}\n\nexport interface DefaultPortModelGenerics extends PortModelGenerics {\n\tOPTIONS: DefaultPortModelOptions;\n}\n\nexport class DefaultPortModel extends PortModel<DefaultPortModelGenerics> {\n\tconstructor(isIn: boolean, name?: string, label?: string);\n\tconstructor(options: DefaultPortModelOptions);\n\tconstructor(options: DefaultPortModelOptions | boolean, name?: string, label?: string) {\n\t\tif (!!name) {\n\t\t\toptions = {\n\t\t\t\tin: !!options,\n\t\t\t\tname: name,\n\t\t\t\tlabel: label\n\t\t\t};\n\t\t}\n\t\toptions = options as DefaultPortModelOptions;\n\t\tsuper({\n\t\t\tlabel: options.label || options.name,\n\t\t\talignment: options.in ? PortModelAlignment.LEFT : PortModelAlignment.RIGHT,\n\t\t\ttype: 'default',\n\t\t\t...options\n\t\t});\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.options.in = event.data.in;\n\t\tthis.options.label = event.data.label;\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\tin: this.options.in,\n\t\t\tlabel: this.options.label\n\t\t};\n\t}\n\n\tlink<T extends LinkModel>(port: PortModel, factory?: AbstractModelFactory<T>): T {\n\t\tlet link = this.createLinkModel(factory);\n\t\tlink.setSourcePort(this);\n\t\tlink.setTargetPort(port);\n\t\treturn link as T;\n\t}\n\n\tcanLinkToPort(port: PortModel): boolean {\n\t\tif (port instanceof DefaultPortModel) {\n\t\t\treturn this.options.in !== port.getOptions().in;\n\t\t}\n\t\treturn true;\n\t}\n\n\tcreateLinkModel(factory?: AbstractModelFactory<LinkModel>): LinkModel {\n\t\tlet link = super.createLinkModel();\n\t\tif (!link && factory) {\n\t\t\treturn factory.generateModel({});\n\t\t}\n\t\treturn link || new DefaultLinkModel();\n\t}\n}\n"]}},"error":null,"hash":"12979d9616626e189f596c2d95acdbab","cacheData":{"env":{}}}