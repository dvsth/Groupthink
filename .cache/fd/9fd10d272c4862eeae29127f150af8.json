{"id":"../node_modules/@projectstorm/react-canvas-core/dist/es/core-state/State.js","dependencies":[{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-canvas-core\\dist\\es\\core-state\\State.js.map","includedInParent":true,"mtime":1594481777970},{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-canvas-core\\src\\core-state\\State.ts","includedInParent":true,"mtime":1594481777970},{"name":"C:\\myprojects\\groupthink\\Groupthink\\package.json","includedInParent":true,"mtime":1594485675900},{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-canvas-core\\package.json","includedInParent":true,"mtime":1594481777970},{"name":"../core-actions/Action","loc":{"line":4,"column":25},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-canvas-core\\dist\\es\\core-state\\State.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-canvas-core\\dist\\es\\core-actions\\Action.js"},{"name":"lodash","loc":{"line":5,"column":18},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-canvas-core\\dist\\es\\core-state\\State.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\lodash\\lodash.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.State = void 0;\nconst Action_1 = require(\"../core-actions/Action\");\nconst _ = require(\"lodash\");\nclass State {\n    constructor(options) {\n        this.actions = [];\n        this.keys = [];\n        this.childStates = [];\n        this.options = options;\n    }\n    setEngine(engine) {\n        this.engine = engine;\n    }\n    getOptions() {\n        return this.options;\n    }\n    eject() {\n        this.engine.getStateMachine().popState();\n    }\n    transitionWithEvent(state, event) {\n        this.engine.getStateMachine().pushState(state);\n        this.engine.getActionEventBus().fireAction(event);\n    }\n    registerAction(action) {\n        this.actions.push(action);\n    }\n    tryActivateParentState(keys) {\n        if (this.keys.length > 0 && !this.isKeysFullfilled(keys)) {\n            this.eject();\n            return true;\n        }\n        return false;\n    }\n    tryActivateChildState(keys) {\n        const state = this.findStateToActivate(keys);\n        if (state) {\n            this.engine.getStateMachine().pushState(state);\n            return true;\n        }\n        return false;\n    }\n    findStateToActivate(keys) {\n        for (let child of this.childStates) {\n            if (child.isKeysFullfilled(keys)) {\n                return child;\n            }\n        }\n        return null;\n    }\n    isKeysFullfilled(keys) {\n        return _.intersection(this.keys, keys).length === this.keys.length;\n    }\n    activated(previous) {\n        const keys = this.engine.getActionEventBus().getKeys();\n        if (this.tryActivateParentState(keys) || this.tryActivateChildState(keys)) {\n            return;\n        }\n        // perhaps we need to pop again?\n        this.handler1 = this.engine.getActionEventBus().registerAction(new Action_1.Action({\n            type: Action_1.InputType.KEY_DOWN,\n            fire: () => {\n                this.tryActivateChildState(this.engine.getActionEventBus().getKeys());\n            }\n        }));\n        this.handler2 = this.engine.getActionEventBus().registerAction(new Action_1.Action({\n            type: Action_1.InputType.KEY_UP,\n            fire: () => {\n                this.tryActivateParentState(this.engine.getActionEventBus().getKeys());\n            }\n        }));\n        for (let action of this.actions) {\n            this.engine.getActionEventBus().registerAction(action);\n        }\n    }\n    deactivated(next) {\n        if (this.handler1) {\n            this.handler1();\n        }\n        if (this.handler2) {\n            this.handler2();\n        }\n        // if this happens, we are going into heirachial state machine mode\n        for (let action of this.actions) {\n            this.engine.getActionEventBus().deregisterAction(action);\n        }\n    }\n}\nexports.State = State;\n"},"sourceMaps":{"js":{"version":3,"file":"State.js","sourceRoot":"","sources":["../../../src/core-state/State.ts"],"names":[],"mappings":"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","sourcesContent":["import { CanvasEngine } from '../CanvasEngine';\nimport { Action, ActionEvent, InputType } from '../core-actions/Action';\nimport { SyntheticEvent } from 'react';\nimport * as _ from 'lodash';\n\nexport interface StateOptions {\n\tname: string;\n}\n\nexport abstract class State<E extends CanvasEngine = CanvasEngine> {\n\tprotected engine: E;\n\tprotected actions: Action[];\n\tprotected keys: string[];\n\tprotected options: StateOptions;\n\tprotected childStates: State[];\n\n\tprivate handler1;\n\tprivate handler2;\n\n\tconstructor(options: StateOptions) {\n\t\tthis.actions = [];\n\t\tthis.keys = [];\n\t\tthis.childStates = [];\n\t\tthis.options = options;\n\t}\n\n\tsetEngine(engine: E) {\n\t\tthis.engine = engine;\n\t}\n\n\tgetOptions() {\n\t\treturn this.options;\n\t}\n\n\teject() {\n\t\tthis.engine.getStateMachine().popState();\n\t}\n\n\ttransitionWithEvent(state: State, event: ActionEvent<SyntheticEvent>) {\n\t\tthis.engine.getStateMachine().pushState(state);\n\t\tthis.engine.getActionEventBus().fireAction(event);\n\t}\n\n\tregisterAction(action: Action) {\n\t\tthis.actions.push(action);\n\t}\n\n\ttryActivateParentState(keys: string[]) {\n\t\tif (this.keys.length > 0 && !this.isKeysFullfilled(keys)) {\n\t\t\tthis.eject();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\ttryActivateChildState(keys: string[]) {\n\t\tconst state = this.findStateToActivate(keys);\n\t\tif (state) {\n\t\t\tthis.engine.getStateMachine().pushState(state);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfindStateToActivate(keys: string[]) {\n\t\tfor (let child of this.childStates) {\n\t\t\tif (child.isKeysFullfilled(keys)) {\n\t\t\t\treturn child;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tisKeysFullfilled(keys: string[]) {\n\t\treturn _.intersection(this.keys, keys).length === this.keys.length;\n\t}\n\n\tactivated(previous: State) {\n\t\tconst keys = this.engine.getActionEventBus().getKeys();\n\n\t\tif (this.tryActivateParentState(keys) || this.tryActivateChildState(keys)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// perhaps we need to pop again?\n\t\tthis.handler1 = this.engine.getActionEventBus().registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.KEY_DOWN,\n\t\t\t\tfire: () => {\n\t\t\t\t\tthis.tryActivateChildState(this.engine.getActionEventBus().getKeys());\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\tthis.handler2 = this.engine.getActionEventBus().registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.KEY_UP,\n\t\t\t\tfire: () => {\n\t\t\t\t\tthis.tryActivateParentState(this.engine.getActionEventBus().getKeys());\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\tfor (let action of this.actions) {\n\t\t\tthis.engine.getActionEventBus().registerAction(action);\n\t\t}\n\t}\n\n\tdeactivated(next: State) {\n\t\tif (this.handler1) {\n\t\t\tthis.handler1();\n\t\t}\n\t\tif (this.handler2) {\n\t\t\tthis.handler2();\n\t\t}\n\t\t// if this happens, we are going into heirachial state machine mode\n\t\tfor (let action of this.actions) {\n\t\t\tthis.engine.getActionEventBus().deregisterAction(action);\n\t\t}\n\t}\n}\n"]}},"error":null,"hash":"0e5921a39e0d381db43b8f3d40738337","cacheData":{"env":{}}}