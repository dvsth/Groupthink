{"id":"../node_modules/dagre/lib/order/resolve-conflicts.js","dependencies":[{"name":"C:\\myprojects\\groupthink\\Groupthink\\package.json","includedInParent":true,"mtime":1594485675900},{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\dagre\\package.json","includedInParent":true,"mtime":1594481940992},{"name":"../lodash","loc":{"line":3,"column":16},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\dagre\\lib\\order\\resolve-conflicts.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\dagre\\lib\\lodash.js"}],"generated":{"js":"\"use strict\";\n\nvar _ = require(\"../lodash\");\n\nmodule.exports = resolveConflicts;\n\n/*\n * Given a list of entries of the form {v, barycenter, weight} and a\n * constraint graph this function will resolve any conflicts between the\n * constraint graph and the barycenters for the entries. If the barycenters for\n * an entry would violate a constraint in the constraint graph then we coalesce\n * the nodes in the conflict into a new node that respects the contraint and\n * aggregates barycenter and weight information.\n *\n * This implementation is based on the description in Forster, \"A Fast and\n * Simple Hueristic for Constrained Two-Level Crossing Reduction,\" thought it\n * differs in some specific details.\n *\n * Pre-conditions:\n *\n *    1. Each entry has the form {v, barycenter, weight}, or if the node has\n *       no barycenter, then {v}.\n *\n * Returns:\n *\n *    A new list of entries of the form {vs, i, barycenter, weight}. The list\n *    `vs` may either be a singleton or it may be an aggregation of nodes\n *    ordered such that they do not violate constraints from the constraint\n *    graph. The property `i` is the lowest original index of any of the\n *    elements in `vs`.\n */\nfunction resolveConflicts(entries, cg) {\n  var mappedEntries = {};\n  _.forEach(entries, function(entry, i) {\n    var tmp = mappedEntries[entry.v] = {\n      indegree: 0,\n      \"in\": [],\n      out: [],\n      vs: [entry.v],\n      i: i\n    };\n    if (!_.isUndefined(entry.barycenter)) {\n      tmp.barycenter = entry.barycenter;\n      tmp.weight = entry.weight;\n    }\n  });\n\n  _.forEach(cg.edges(), function(e) {\n    var entryV = mappedEntries[e.v];\n    var entryW = mappedEntries[e.w];\n    if (!_.isUndefined(entryV) && !_.isUndefined(entryW)) {\n      entryW.indegree++;\n      entryV.out.push(mappedEntries[e.w]);\n    }\n  });\n\n  var sourceSet = _.filter(mappedEntries, function(entry) {\n    return !entry.indegree;\n  });\n\n  return doResolveConflicts(sourceSet);\n}\n\nfunction doResolveConflicts(sourceSet) {\n  var entries = [];\n\n  function handleIn(vEntry) {\n    return function(uEntry) {\n      if (uEntry.merged) {\n        return;\n      }\n      if (_.isUndefined(uEntry.barycenter) ||\n          _.isUndefined(vEntry.barycenter) ||\n          uEntry.barycenter >= vEntry.barycenter) {\n        mergeEntries(vEntry, uEntry);\n      }\n    };\n  }\n\n  function handleOut(vEntry) {\n    return function(wEntry) {\n      wEntry[\"in\"].push(vEntry);\n      if (--wEntry.indegree === 0) {\n        sourceSet.push(wEntry);\n      }\n    };\n  }\n\n  while (sourceSet.length) {\n    var entry = sourceSet.pop();\n    entries.push(entry);\n    _.forEach(entry[\"in\"].reverse(), handleIn(entry));\n    _.forEach(entry.out, handleOut(entry));\n  }\n\n  return _.map(_.filter(entries, function(entry) { return !entry.merged; }),\n    function(entry) {\n      return _.pick(entry, [\"vs\", \"i\", \"barycenter\", \"weight\"]);\n    });\n\n}\n\nfunction mergeEntries(target, source) {\n  var sum = 0;\n  var weight = 0;\n\n  if (target.weight) {\n    sum += target.barycenter * target.weight;\n    weight += target.weight;\n  }\n\n  if (source.weight) {\n    sum += source.barycenter * source.weight;\n    weight += source.weight;\n  }\n\n  target.vs = source.vs.concat(target.vs);\n  target.barycenter = sum / weight;\n  target.weight = weight;\n  target.i = Math.min(source.i, target.i);\n  source.merged = true;\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/dagre/lib/order/resolve-conflicts.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}}],"sources":{"../node_modules/dagre/lib/order/resolve-conflicts.js":"\"use strict\";\n\nvar _ = require(\"../lodash\");\n\nmodule.exports = resolveConflicts;\n\n/*\n * Given a list of entries of the form {v, barycenter, weight} and a\n * constraint graph this function will resolve any conflicts between the\n * constraint graph and the barycenters for the entries. If the barycenters for\n * an entry would violate a constraint in the constraint graph then we coalesce\n * the nodes in the conflict into a new node that respects the contraint and\n * aggregates barycenter and weight information.\n *\n * This implementation is based on the description in Forster, \"A Fast and\n * Simple Hueristic for Constrained Two-Level Crossing Reduction,\" thought it\n * differs in some specific details.\n *\n * Pre-conditions:\n *\n *    1. Each entry has the form {v, barycenter, weight}, or if the node has\n *       no barycenter, then {v}.\n *\n * Returns:\n *\n *    A new list of entries of the form {vs, i, barycenter, weight}. The list\n *    `vs` may either be a singleton or it may be an aggregation of nodes\n *    ordered such that they do not violate constraints from the constraint\n *    graph. The property `i` is the lowest original index of any of the\n *    elements in `vs`.\n */\nfunction resolveConflicts(entries, cg) {\n  var mappedEntries = {};\n  _.forEach(entries, function(entry, i) {\n    var tmp = mappedEntries[entry.v] = {\n      indegree: 0,\n      \"in\": [],\n      out: [],\n      vs: [entry.v],\n      i: i\n    };\n    if (!_.isUndefined(entry.barycenter)) {\n      tmp.barycenter = entry.barycenter;\n      tmp.weight = entry.weight;\n    }\n  });\n\n  _.forEach(cg.edges(), function(e) {\n    var entryV = mappedEntries[e.v];\n    var entryW = mappedEntries[e.w];\n    if (!_.isUndefined(entryV) && !_.isUndefined(entryW)) {\n      entryW.indegree++;\n      entryV.out.push(mappedEntries[e.w]);\n    }\n  });\n\n  var sourceSet = _.filter(mappedEntries, function(entry) {\n    return !entry.indegree;\n  });\n\n  return doResolveConflicts(sourceSet);\n}\n\nfunction doResolveConflicts(sourceSet) {\n  var entries = [];\n\n  function handleIn(vEntry) {\n    return function(uEntry) {\n      if (uEntry.merged) {\n        return;\n      }\n      if (_.isUndefined(uEntry.barycenter) ||\n          _.isUndefined(vEntry.barycenter) ||\n          uEntry.barycenter >= vEntry.barycenter) {\n        mergeEntries(vEntry, uEntry);\n      }\n    };\n  }\n\n  function handleOut(vEntry) {\n    return function(wEntry) {\n      wEntry[\"in\"].push(vEntry);\n      if (--wEntry.indegree === 0) {\n        sourceSet.push(wEntry);\n      }\n    };\n  }\n\n  while (sourceSet.length) {\n    var entry = sourceSet.pop();\n    entries.push(entry);\n    _.forEach(entry[\"in\"].reverse(), handleIn(entry));\n    _.forEach(entry.out, handleOut(entry));\n  }\n\n  return _.map(_.filter(entries, function(entry) { return !entry.merged; }),\n    function(entry) {\n      return _.pick(entry, [\"vs\", \"i\", \"barycenter\", \"weight\"]);\n    });\n\n}\n\nfunction mergeEntries(target, source) {\n  var sum = 0;\n  var weight = 0;\n\n  if (target.weight) {\n    sum += target.barycenter * target.weight;\n    weight += target.weight;\n  }\n\n  if (source.weight) {\n    sum += source.barycenter * source.weight;\n    weight += source.weight;\n  }\n\n  target.vs = source.vs.concat(target.vs);\n  target.barycenter = sum / weight;\n  target.weight = weight;\n  target.i = Math.min(source.i, target.i);\n  source.merged = true;\n}\n"},"lineCount":123}},"error":null,"hash":"3e3b7b158483b7a3c1e78bfc73d97e95","cacheData":{"env":{}}}