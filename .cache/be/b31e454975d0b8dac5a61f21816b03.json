{"id":"../node_modules/@projectstorm/react-diagrams-core/dist/es/entities/port/PortWidget.js","dependencies":[{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\dist\\es\\entities\\port\\PortWidget.js.map","includedInParent":true,"mtime":1594481777956},{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\src\\entities\\port\\PortWidget.tsx","includedInParent":true,"mtime":1594481777956},{"name":"C:\\myprojects\\groupthink\\Groupthink\\package.json","includedInParent":true,"mtime":1594485675900},{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\package.json","includedInParent":true,"mtime":1594481777956},{"name":"react","loc":{"line":4,"column":22},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\dist\\es\\entities\\port\\PortWidget.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\react\\index.js"},{"name":"lodash","loc":{"line":5,"column":18},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\dist\\es\\entities\\port\\PortWidget.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\lodash\\lodash.js"},{"name":"@projectstorm/react-canvas-core","loc":{"line":6,"column":36},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\dist\\es\\entities\\port\\PortWidget.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-canvas-core\\dist\\es\\index.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PortWidget = void 0;\nconst React = require(\"react\");\nconst _ = require(\"lodash\");\nconst react_canvas_core_1 = require(\"@projectstorm/react-canvas-core\");\nclass PortWidget extends React.Component {\n    constructor(props) {\n        super(props);\n        this.ref = React.createRef();\n    }\n    report() {\n        this.props.port.updateCoords(this.props.engine.getPortCoords(this.props.port, this.ref.current));\n    }\n    componentWillUnmount() {\n        this.engineListenerHandle && this.engineListenerHandle.deregister();\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (!this.props.port.reportedPosition) {\n            this.report();\n        }\n    }\n    componentDidMount() {\n        this.engineListenerHandle = this.props.engine.registerListener({\n            canvasReady: () => {\n                this.report();\n            }\n        });\n        if (this.props.engine.getCanvas()) {\n            this.report();\n        }\n    }\n    getExtraProps() {\n        if (react_canvas_core_1.Toolkit.TESTING) {\n            const links = _.keys(this.props.port.getNode().getPort(this.props.port.getName()).links).join(',');\n            return {\n                'data-links': links\n            };\n        }\n        return {};\n    }\n    render() {\n        return (React.createElement(\"div\", Object.assign({ style: this.props.style, ref: this.ref, className: `port ${this.props.className || ''}`, \"data-name\": this.props.port.getName(), \"data-nodeid\": this.props.port.getNode().getID() }, this.getExtraProps()), this.props.children));\n    }\n}\nexports.PortWidget = PortWidget;\n"},"sourceMaps":{"js":{"version":3,"file":"PortWidget.js","sourceRoot":"","sources":["../../../../src/entities/port/PortWidget.tsx"],"names":[],"mappings":";;;AAAA,+BAA+B;AAC/B,4BAA4B;AAG5B,uEAA0E;AAS1E,MAAa,UAAW,SAAQ,KAAK,CAAC,SAAoB;IAIzD,YAAY,KAAgB;QAC3B,KAAK,CAAC,KAAK,CAAC,CAAC;QACb,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;IAC9B,CAAC;IAED,MAAM;QACL,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;IAClG,CAAC;IAED,oBAAoB;QACnB,IAAI,CAAC,oBAAoB,IAAI,IAAI,CAAC,oBAAoB,CAAC,UAAU,EAAE,CAAC;IACrE,CAAC;IAED,kBAAkB,CAAC,SAA8B,EAAE,SAAS,EAAE,QAAc;QAC3E,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,gBAAgB,EAAE;YACtC,IAAI,CAAC,MAAM,EAAE,CAAC;SACd;IACF,CAAC;IAED,iBAAiB;QAChB,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,gBAAgB,CAAC;YAC9D,WAAW,EAAE,GAAG,EAAE;gBACjB,IAAI,CAAC,MAAM,EAAE,CAAC;YACf,CAAC;SACD,CAAC,CAAC;QACH,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE;YAClC,IAAI,CAAC,MAAM,EAAE,CAAC;SACd;IACF,CAAC;IAED,aAAa;QACZ,IAAI,2BAAO,CAAC,OAAO,EAAE;YACpB,MAAM,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACnG,OAAO;gBACN,YAAY,EAAE,KAAK;aACnB,CAAC;SACF;QACD,OAAO,EAAE,CAAC;IACX,CAAC;IAED,MAAM;QACL,OAAO,CACN,2CACC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EACvB,GAAG,EAAE,IAAI,CAAC,GAAG,EACb,SAAS,EAAE,QAAQ,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,EAAE,EAAE,eACpC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,iBACvB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,IAC1C,IAAI,CAAC,aAAa,EAAE,GACvB,IAAI,CAAC,KAAK,CAAC,QAAQ,CACf,CACN,CAAC;IACH,CAAC;CACD;AAzDD,gCAyDC","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { PortModel } from './PortModel';\nimport { DiagramEngine } from '../../DiagramEngine';\nimport { ListenerHandle, Toolkit } from '@projectstorm/react-canvas-core';\n\nexport interface PortProps {\n\tport: PortModel;\n\tengine: DiagramEngine;\n\tclassName?;\n\tstyle?;\n}\n\nexport class PortWidget extends React.Component<PortProps> {\n\tref: React.RefObject<HTMLDivElement>;\n\tengineListenerHandle: ListenerHandle;\n\n\tconstructor(props: PortProps) {\n\t\tsuper(props);\n\t\tthis.ref = React.createRef();\n\t}\n\n\treport() {\n\t\tthis.props.port.updateCoords(this.props.engine.getPortCoords(this.props.port, this.ref.current));\n\t}\n\n\tcomponentWillUnmount(): void {\n\t\tthis.engineListenerHandle && this.engineListenerHandle.deregister();\n\t}\n\n\tcomponentDidUpdate(prevProps: Readonly<PortProps>, prevState, snapshot?: any): void {\n\t\tif (!this.props.port.reportedPosition) {\n\t\t\tthis.report();\n\t\t}\n\t}\n\n\tcomponentDidMount(): void {\n\t\tthis.engineListenerHandle = this.props.engine.registerListener({\n\t\t\tcanvasReady: () => {\n\t\t\t\tthis.report();\n\t\t\t}\n\t\t});\n\t\tif (this.props.engine.getCanvas()) {\n\t\t\tthis.report();\n\t\t}\n\t}\n\n\tgetExtraProps() {\n\t\tif (Toolkit.TESTING) {\n\t\t\tconst links = _.keys(this.props.port.getNode().getPort(this.props.port.getName()).links).join(',');\n\t\t\treturn {\n\t\t\t\t'data-links': links\n\t\t\t};\n\t\t}\n\t\treturn {};\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tstyle={this.props.style}\n\t\t\t\tref={this.ref}\n\t\t\t\tclassName={`port ${this.props.className || ''}`}\n\t\t\t\tdata-name={this.props.port.getName()}\n\t\t\t\tdata-nodeid={this.props.port.getNode().getID()}\n\t\t\t\t{...this.getExtraProps()}>\n\t\t\t\t{this.props.children}\n\t\t\t</div>\n\t\t);\n\t}\n}\n"]}},"error":null,"hash":"fa92d16504dc720a751e2b9abf595f94","cacheData":{"env":{}}}