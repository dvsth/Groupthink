{"id":"../node_modules/@projectstorm/react-diagrams-core/dist/es/states/DefaultDiagramState.js","dependencies":[{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\dist\\es\\states\\DefaultDiagramState.js.map","includedInParent":true,"mtime":1594481777956},{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\src\\states\\DefaultDiagramState.ts","includedInParent":true,"mtime":1594481777956},{"name":"C:\\myprojects\\groupthink\\Groupthink\\package.json","includedInParent":true,"mtime":1594485675900},{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\package.json","includedInParent":true,"mtime":1594481777956},{"name":"@projectstorm/react-canvas-core","loc":{"line":4,"column":36},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\dist\\es\\states\\DefaultDiagramState.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-canvas-core\\dist\\es\\index.js"},{"name":"../entities/port/PortModel","loc":{"line":5,"column":28},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\dist\\es\\states\\DefaultDiagramState.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\dist\\es\\entities\\port\\PortModel.js"},{"name":"./DragNewLinkState","loc":{"line":6,"column":35},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\dist\\es\\states\\DefaultDiagramState.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\dist\\es\\states\\DragNewLinkState.js"},{"name":"./DragDiagramItemsState","loc":{"line":7,"column":40},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\dist\\es\\states\\DefaultDiagramState.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-core\\dist\\es\\states\\DragDiagramItemsState.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultDiagramState = void 0;\nconst react_canvas_core_1 = require(\"@projectstorm/react-canvas-core\");\nconst PortModel_1 = require(\"../entities/port/PortModel\");\nconst DragNewLinkState_1 = require(\"./DragNewLinkState\");\nconst DragDiagramItemsState_1 = require(\"./DragDiagramItemsState\");\nclass DefaultDiagramState extends react_canvas_core_1.State {\n    constructor() {\n        super({\n            name: 'default-diagrams'\n        });\n        this.childStates = [new react_canvas_core_1.SelectingState()];\n        this.dragCanvas = new react_canvas_core_1.DragCanvasState();\n        this.dragNewLink = new DragNewLinkState_1.DragNewLinkState();\n        this.dragItems = new DragDiagramItemsState_1.DragDiagramItemsState();\n        // determine what was clicked on\n        this.registerAction(new react_canvas_core_1.Action({\n            type: react_canvas_core_1.InputType.MOUSE_DOWN,\n            fire: (event) => {\n                const element = this.engine.getActionEventBus().getModelForEvent(event);\n                // the canvas was clicked on, transition to the dragging canvas state\n                if (!element) {\n                    this.transitionWithEvent(this.dragCanvas, event);\n                }\n                // initiate dragging a new link\n                else if (element instanceof PortModel_1.PortModel) {\n                    this.transitionWithEvent(this.dragNewLink, event);\n                }\n                // move the items (and potentially link points)\n                else {\n                    this.transitionWithEvent(this.dragItems, event);\n                }\n            }\n        }));\n    }\n}\nexports.DefaultDiagramState = DefaultDiagramState;\n"},"sourceMaps":{"js":{"version":3,"file":"DefaultDiagramState.js","sourceRoot":"","sources":["../../../src/states/DefaultDiagramState.ts"],"names":[],"mappings":";;;AACA,uEAOyC;AACzC,0DAAuD;AACvD,yDAAsD;AAEtD,mEAAgE;AAEhE,MAAa,mBAAoB,SAAQ,yBAAoB;IAK5D;QACC,KAAK,CAAC;YACL,IAAI,EAAE,kBAAkB;SACxB,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,kCAAc,EAAE,CAAC,CAAC;QAC1C,IAAI,CAAC,UAAU,GAAG,IAAI,mCAAe,EAAE,CAAC;QACxC,IAAI,CAAC,WAAW,GAAG,IAAI,mCAAgB,EAAE,CAAC;QAC1C,IAAI,CAAC,SAAS,GAAG,IAAI,6CAAqB,EAAE,CAAC;QAE7C,gCAAgC;QAChC,IAAI,CAAC,cAAc,CAClB,IAAI,0BAAM,CAAC;YACV,IAAI,EAAE,6BAAS,CAAC,UAAU;YAC1B,IAAI,EAAE,CAAC,KAA8B,EAAE,EAAE;gBACxC,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;gBAExE,qEAAqE;gBACrE,IAAI,CAAC,OAAO,EAAE;oBACb,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;iBACjD;gBACD,+BAA+B;qBAC1B,IAAI,OAAO,YAAY,qBAAS,EAAE;oBACtC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;iBAClD;gBACD,+CAA+C;qBAC1C;oBACJ,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;iBAChD;YACF,CAAC;SACD,CAAC,CACF,CAAC;IACH,CAAC;CACD;AArCD,kDAqCC","sourcesContent":["import { MouseEvent } from 'react';\nimport {\n\tSelectingState,\n\tState,\n\tAction,\n\tInputType,\n\tActionEvent,\n\tDragCanvasState\n} from '@projectstorm/react-canvas-core';\nimport { PortModel } from '../entities/port/PortModel';\nimport { DragNewLinkState } from './DragNewLinkState';\nimport { DiagramEngine } from '../DiagramEngine';\nimport { DragDiagramItemsState } from './DragDiagramItemsState';\n\nexport class DefaultDiagramState extends State<DiagramEngine> {\n\tdragCanvas: DragCanvasState;\n\tdragNewLink: DragNewLinkState;\n\tdragItems: DragDiagramItemsState;\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tname: 'default-diagrams'\n\t\t});\n\t\tthis.childStates = [new SelectingState()];\n\t\tthis.dragCanvas = new DragCanvasState();\n\t\tthis.dragNewLink = new DragNewLinkState();\n\t\tthis.dragItems = new DragDiagramItemsState();\n\n\t\t// determine what was clicked on\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.MOUSE_DOWN,\n\t\t\t\tfire: (event: ActionEvent<MouseEvent>) => {\n\t\t\t\t\tconst element = this.engine.getActionEventBus().getModelForEvent(event);\n\n\t\t\t\t\t// the canvas was clicked on, transition to the dragging canvas state\n\t\t\t\t\tif (!element) {\n\t\t\t\t\t\tthis.transitionWithEvent(this.dragCanvas, event);\n\t\t\t\t\t}\n\t\t\t\t\t// initiate dragging a new link\n\t\t\t\t\telse if (element instanceof PortModel) {\n\t\t\t\t\t\tthis.transitionWithEvent(this.dragNewLink, event);\n\t\t\t\t\t}\n\t\t\t\t\t// move the items (and potentially link points)\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.transitionWithEvent(this.dragItems, event);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n}\n"]}},"error":null,"hash":"4ca36baa20410be3617dcd30645e3819","cacheData":{"env":{}}}