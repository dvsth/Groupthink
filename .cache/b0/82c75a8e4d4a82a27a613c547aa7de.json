{"id":"../node_modules/@projectstorm/react-diagrams-defaults/dist/es/link/DefaultLinkFactory.js","dependencies":[{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-defaults\\dist\\es\\link\\DefaultLinkFactory.js.map","includedInParent":true,"mtime":1594481777940},{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-defaults\\src\\link\\DefaultLinkFactory.tsx","includedInParent":true,"mtime":1594481777940},{"name":"C:\\myprojects\\groupthink\\Groupthink\\package.json","includedInParent":true,"mtime":1594485675900},{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-defaults\\package.json","includedInParent":true,"mtime":1594481777940},{"name":"react","loc":{"line":4,"column":22},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-defaults\\dist\\es\\link\\DefaultLinkFactory.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\react\\index.js"},{"name":"./DefaultLinkModel","loc":{"line":5,"column":35},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-defaults\\dist\\es\\link\\DefaultLinkFactory.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-defaults\\dist\\es\\link\\DefaultLinkModel.js"},{"name":"./DefaultLinkWidget","loc":{"line":6,"column":36},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-defaults\\dist\\es\\link\\DefaultLinkFactory.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-defaults\\dist\\es\\link\\DefaultLinkWidget.js"},{"name":"@emotion/styled","loc":{"line":7,"column":25},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-defaults\\dist\\es\\link\\DefaultLinkFactory.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@emotion\\styled\\dist\\styled.browser.esm.js"},{"name":"@emotion/core","loc":{"line":8,"column":23},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-defaults\\dist\\es\\link\\DefaultLinkFactory.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@emotion\\core\\dist\\core.browser.esm.js"},{"name":"@projectstorm/react-canvas-core","loc":{"line":9,"column":36},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-diagrams-defaults\\dist\\es\\link\\DefaultLinkFactory.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-canvas-core\\dist\\es\\index.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultLinkFactory = void 0;\nconst React = require(\"react\");\nconst DefaultLinkModel_1 = require(\"./DefaultLinkModel\");\nconst DefaultLinkWidget_1 = require(\"./DefaultLinkWidget\");\nconst styled_1 = require(\"@emotion/styled\");\nconst core_1 = require(\"@emotion/core\");\nconst react_canvas_core_1 = require(\"@projectstorm/react-canvas-core\");\nvar S;\n(function (S) {\n    S.Keyframes = core_1.keyframes `\n\t\tfrom {\n\t\t\tstroke-dashoffset: 24;\n\t\t}\n\t\tto {\n\t\t\tstroke-dashoffset: 0;\n\t\t}\n\t`;\n    const selected = core_1.css `\n\t\tstroke-dasharray: 10, 2;\n\t\tanimation: ${S.Keyframes} 1s linear infinite;\n\t`;\n    S.Path = styled_1.default.path `\n\t\t${(p) => p.selected && selected};\n\t\tfill: none;\n\t\tpointer-events: all;\n\t`;\n})(S || (S = {}));\nclass DefaultLinkFactory extends react_canvas_core_1.AbstractReactFactory {\n    constructor(type = 'default') {\n        super(type);\n    }\n    generateReactWidget(event) {\n        return React.createElement(DefaultLinkWidget_1.DefaultLinkWidget, { link: event.model, diagramEngine: this.engine });\n    }\n    generateModel(event) {\n        return new DefaultLinkModel_1.DefaultLinkModel();\n    }\n    generateLinkSegment(model, selected, path) {\n        return (React.createElement(S.Path, { selected: selected, stroke: selected ? model.getOptions().selectedColor : model.getOptions().color, strokeWidth: model.getOptions().width, d: path }));\n    }\n}\nexports.DefaultLinkFactory = DefaultLinkFactory;\n"},"sourceMaps":{"js":{"version":3,"file":"DefaultLinkFactory.js","sourceRoot":"","sources":["../../../src/link/DefaultLinkFactory.tsx"],"names":[],"mappings":";;;AAAA,+BAA+B;AAC/B,yDAAsD;AACtD,2DAAwD;AACxD,4CAAqC;AACrC,wCAA+C;AAC/C,uEAAuE;AAGvE,IAAU,CAAC,CAoBV;AApBD,WAAU,CAAC;IACG,WAAS,GAAG,gBAAS,CAAA;;;;;;;EAOjC,CAAC;IAEF,MAAM,QAAQ,GAAG,UAAG,CAAA;;eAEN,EAAA,SAAS;EACtB,CAAC;IAEW,MAAI,GAAG,gBAAM,CAAC,IAAI,CAAuB;IACnD,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,IAAI,QAAQ;;;EAG/B,CAAC;AACH,CAAC,EApBS,CAAC,KAAD,CAAC,QAoBV;AAED,MAAa,kBAAqE,SAAQ,wCAGzF;IACA,YAAY,IAAI,GAAG,SAAS;QAC3B,KAAK,CAAC,IAAI,CAAC,CAAC;IACb,CAAC;IAED,mBAAmB,CAAC,KAAK;QACxB,OAAO,oBAAC,qCAAiB,IAAC,IAAI,EAAE,KAAK,CAAC,KAAK,EAAE,aAAa,EAAE,IAAI,CAAC,MAAM,GAAI,CAAC;IAC7E,CAAC;IAED,aAAa,CAAC,KAAK;QAClB,OAAO,IAAI,mCAAgB,EAAU,CAAC;IACvC,CAAC;IAED,mBAAmB,CAAC,KAAW,EAAE,QAAiB,EAAE,IAAY;QAC/D,OAAO,CACN,oBAAC,CAAC,CAAC,IAAI,IACN,QAAQ,EAAE,QAAQ,EAClB,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,KAAK,EAC9E,WAAW,EAAE,KAAK,CAAC,UAAU,EAAE,CAAC,KAAK,EACrC,CAAC,EAAE,IAAI,GACN,CACF,CAAC;IACH,CAAC;CACD;AA1BD,gDA0BC","sourcesContent":["import * as React from 'react';\nimport { DefaultLinkModel } from './DefaultLinkModel';\nimport { DefaultLinkWidget } from './DefaultLinkWidget';\nimport styled from '@emotion/styled';\nimport { css, keyframes } from '@emotion/core';\nimport { AbstractReactFactory } from '@projectstorm/react-canvas-core';\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\n\nnamespace S {\n\texport const Keyframes = keyframes`\n\t\tfrom {\n\t\t\tstroke-dashoffset: 24;\n\t\t}\n\t\tto {\n\t\t\tstroke-dashoffset: 0;\n\t\t}\n\t`;\n\n\tconst selected = css`\n\t\tstroke-dasharray: 10, 2;\n\t\tanimation: ${Keyframes} 1s linear infinite;\n\t`;\n\n\texport const Path = styled.path<{ selected: boolean }>`\n\t\t${(p) => p.selected && selected};\n\t\tfill: none;\n\t\tpointer-events: all;\n\t`;\n}\n\nexport class DefaultLinkFactory<Link extends DefaultLinkModel = DefaultLinkModel> extends AbstractReactFactory<\n\tLink,\n\tDiagramEngine\n> {\n\tconstructor(type = 'default') {\n\t\tsuper(type);\n\t}\n\n\tgenerateReactWidget(event): JSX.Element {\n\t\treturn <DefaultLinkWidget link={event.model} diagramEngine={this.engine} />;\n\t}\n\n\tgenerateModel(event): Link {\n\t\treturn new DefaultLinkModel() as Link;\n\t}\n\n\tgenerateLinkSegment(model: Link, selected: boolean, path: string) {\n\t\treturn (\n\t\t\t<S.Path\n\t\t\t\tselected={selected}\n\t\t\t\tstroke={selected ? model.getOptions().selectedColor : model.getOptions().color}\n\t\t\t\tstrokeWidth={model.getOptions().width}\n\t\t\t\td={path}\n\t\t\t/>\n\t\t);\n\t}\n}\n"]}},"error":null,"hash":"a0c5ec71590a66fbb3a59e259074ea04","cacheData":{"env":{}}}