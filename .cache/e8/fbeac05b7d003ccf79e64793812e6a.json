{"id":"../node_modules/@projectstorm/react-canvas-core/dist/es/core-models/BasePositionModel.js","dependencies":[{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-canvas-core\\dist\\es\\core-models\\BasePositionModel.js.map","includedInParent":true,"mtime":1594481777970},{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-canvas-core\\src\\core-models\\BasePositionModel.ts","includedInParent":true,"mtime":1594481777970},{"name":"C:\\myprojects\\groupthink\\Groupthink\\package.json","includedInParent":true,"mtime":1594485675900},{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-canvas-core\\package.json","includedInParent":true,"mtime":1594481777970},{"name":"./BaseModel","loc":{"line":4,"column":28},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-canvas-core\\dist\\es\\core-models\\BasePositionModel.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-canvas-core\\dist\\es\\core-models\\BaseModel.js"},{"name":"@projectstorm/geometry","loc":{"line":5,"column":27},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\react-canvas-core\\dist\\es\\core-models\\BasePositionModel.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\@projectstorm\\geometry\\dist\\es\\index.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BasePositionModel = void 0;\nconst BaseModel_1 = require(\"./BaseModel\");\nconst geometry_1 = require(\"@projectstorm/geometry\");\nclass BasePositionModel extends BaseModel_1.BaseModel {\n    constructor(options) {\n        super(options);\n        this.position = options.position || new geometry_1.Point(0, 0);\n    }\n    setPosition(x, y) {\n        if (typeof x === 'object') {\n            this.position = x;\n        }\n        else if (typeof x) {\n            this.position = new geometry_1.Point(x, y);\n        }\n        this.fireEvent({}, 'positionChanged');\n    }\n    getBoundingBox() {\n        return new geometry_1.Rectangle(this.position, 0, 0);\n    }\n    deserialize(event) {\n        super.deserialize(event);\n        this.position = new geometry_1.Point(event.data.x, event.data.y);\n    }\n    serialize() {\n        return Object.assign(Object.assign({}, super.serialize()), { x: this.position.x, y: this.position.y });\n    }\n    getPosition() {\n        return this.position;\n    }\n    getX() {\n        return this.position.x;\n    }\n    getY() {\n        return this.position.y;\n    }\n}\nexports.BasePositionModel = BasePositionModel;\n"},"sourceMaps":{"js":{"version":3,"file":"BasePositionModel.js","sourceRoot":"","sources":["../../../src/core-models/BasePositionModel.ts"],"names":[],"mappings":";;;AAAA,2CAAgG;AAEhG,qDAA0D;AAgB1D,MAAa,iBAAmF,SAAQ,qBAAY;IAInH,YAAY,OAAqB;QAChC,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,IAAI,IAAI,gBAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACrD,CAAC;IAID,WAAW,CAAC,CAAC,EAAE,CAAE;QAChB,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;YAC1B,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;SAClB;aAAM,IAAI,OAAO,CAAC,EAAE;YACpB,IAAI,CAAC,QAAQ,GAAG,IAAI,gBAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAChC;QACD,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,iBAAiB,CAAC,CAAC;IACvC,CAAC;IAED,cAAc;QACb,OAAO,IAAI,oBAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,CAAC;IAED,WAAW,CAAC,KAA6B;QACxC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,gBAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACvD,CAAC;IAED,SAAS;QACR,uCACI,KAAK,CAAC,SAAS,EAAE,KACpB,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,EAClB,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,IACjB;IACH,CAAC;IAED,WAAW;QACV,OAAO,IAAI,CAAC,QAAQ,CAAC;IACtB,CAAC;IAED,IAAI;QACH,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IACxB,CAAC;IAED,IAAI;QACH,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IACxB,CAAC;CACD;AAhDD,8CAgDC","sourcesContent":["import { BaseModel, BaseModelGenerics, BaseModelListener, BaseModelOptions } from './BaseModel';\nimport { BaseEntityEvent, DeserializeEvent } from './BaseEntity';\nimport { Point, Rectangle } from '@projectstorm/geometry';\nimport { ModelGeometryInterface } from '../core/ModelGeometryInterface';\n\nexport interface BasePositionModelListener extends BaseModelListener {\n\tpositionChanged?(event: BaseEntityEvent<BasePositionModel>): void;\n}\n\nexport interface BasePositionModelOptions extends BaseModelOptions {\n\tposition?: Point;\n}\n\nexport interface BasePositionModelGenerics extends BaseModelGenerics {\n\tLISTENER: BasePositionModelListener;\n\tOPTIONS: BasePositionModelOptions;\n}\n\nexport class BasePositionModel<G extends BasePositionModelGenerics = BasePositionModelGenerics> extends BaseModel<G>\n\timplements ModelGeometryInterface {\n\tprotected position: Point;\n\n\tconstructor(options: G['OPTIONS']) {\n\t\tsuper(options);\n\t\tthis.position = options.position || new Point(0, 0);\n\t}\n\n\tsetPosition(point: Point);\n\tsetPosition(x: number, y: number);\n\tsetPosition(x, y?) {\n\t\tif (typeof x === 'object') {\n\t\t\tthis.position = x;\n\t\t} else if (typeof x) {\n\t\t\tthis.position = new Point(x, y);\n\t\t}\n\t\tthis.fireEvent({}, 'positionChanged');\n\t}\n\n\tgetBoundingBox(): Rectangle {\n\t\treturn new Rectangle(this.position, 0, 0);\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.position = new Point(event.data.x, event.data.y);\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\tx: this.position.x,\n\t\t\ty: this.position.y\n\t\t};\n\t}\n\n\tgetPosition(): Point {\n\t\treturn this.position;\n\t}\n\n\tgetX() {\n\t\treturn this.position.x;\n\t}\n\n\tgetY() {\n\t\treturn this.position.y;\n\t}\n}\n"]}},"error":null,"hash":"3049459dcee208c1b3802b8bf12ee623","cacheData":{"env":{}}}