{"id":"../node_modules/dagre/lib/order/sort-subgraph.js","dependencies":[{"name":"C:\\myprojects\\groupthink\\Groupthink\\package.json","includedInParent":true,"mtime":1594485675900},{"name":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\dagre\\package.json","includedInParent":true,"mtime":1594481940992},{"name":"../lodash","loc":{"line":1,"column":16},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\dagre\\lib\\order\\sort-subgraph.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\dagre\\lib\\lodash.js"},{"name":"./barycenter","loc":{"line":2,"column":25},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\dagre\\lib\\order\\sort-subgraph.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\dagre\\lib\\order\\barycenter.js"},{"name":"./resolve-conflicts","loc":{"line":3,"column":31},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\dagre\\lib\\order\\sort-subgraph.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\dagre\\lib\\order\\resolve-conflicts.js"},{"name":"./sort","loc":{"line":4,"column":19},"parent":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\dagre\\lib\\order\\sort-subgraph.js","resolved":"C:\\myprojects\\groupthink\\Groupthink\\node_modules\\dagre\\lib\\order\\sort.js"}],"generated":{"js":"var _ = require(\"../lodash\");\nvar barycenter = require(\"./barycenter\");\nvar resolveConflicts = require(\"./resolve-conflicts\");\nvar sort = require(\"./sort\");\n\nmodule.exports = sortSubgraph;\n\nfunction sortSubgraph(g, v, cg, biasRight) {\n  var movable = g.children(v);\n  var node = g.node(v);\n  var bl = node ? node.borderLeft : undefined;\n  var br = node ? node.borderRight: undefined;\n  var subgraphs = {};\n\n  if (bl) {\n    movable = _.filter(movable, function(w) {\n      return w !== bl && w !== br;\n    });\n  }\n\n  var barycenters = barycenter(g, movable);\n  _.forEach(barycenters, function(entry) {\n    if (g.children(entry.v).length) {\n      var subgraphResult = sortSubgraph(g, entry.v, cg, biasRight);\n      subgraphs[entry.v] = subgraphResult;\n      if (_.has(subgraphResult, \"barycenter\")) {\n        mergeBarycenters(entry, subgraphResult);\n      }\n    }\n  });\n\n  var entries = resolveConflicts(barycenters, cg);\n  expandSubgraphs(entries, subgraphs);\n\n  var result = sort(entries, biasRight);\n\n  if (bl) {\n    result.vs = _.flatten([bl, result.vs, br], true);\n    if (g.predecessors(bl).length) {\n      var blPred = g.node(g.predecessors(bl)[0]),\n        brPred = g.node(g.predecessors(br)[0]);\n      if (!_.has(result, \"barycenter\")) {\n        result.barycenter = 0;\n        result.weight = 0;\n      }\n      result.barycenter = (result.barycenter * result.weight +\n                           blPred.order + brPred.order) / (result.weight + 2);\n      result.weight += 2;\n    }\n  }\n\n  return result;\n}\n\nfunction expandSubgraphs(entries, subgraphs) {\n  _.forEach(entries, function(entry) {\n    entry.vs = _.flatten(entry.vs.map(function(v) {\n      if (subgraphs[v]) {\n        return subgraphs[v].vs;\n      }\n      return v;\n    }), true);\n  });\n}\n\nfunction mergeBarycenters(target, other) {\n  if (!_.isUndefined(target.barycenter)) {\n    target.barycenter = (target.barycenter * target.weight +\n                         other.barycenter * other.weight) /\n                        (target.weight + other.weight);\n    target.weight += other.weight;\n  } else {\n    target.barycenter = other.barycenter;\n    target.weight = other.weight;\n  }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/dagre/lib/order/sort-subgraph.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}}],"sources":{"../node_modules/dagre/lib/order/sort-subgraph.js":"var _ = require(\"../lodash\");\nvar barycenter = require(\"./barycenter\");\nvar resolveConflicts = require(\"./resolve-conflicts\");\nvar sort = require(\"./sort\");\n\nmodule.exports = sortSubgraph;\n\nfunction sortSubgraph(g, v, cg, biasRight) {\n  var movable = g.children(v);\n  var node = g.node(v);\n  var bl = node ? node.borderLeft : undefined;\n  var br = node ? node.borderRight: undefined;\n  var subgraphs = {};\n\n  if (bl) {\n    movable = _.filter(movable, function(w) {\n      return w !== bl && w !== br;\n    });\n  }\n\n  var barycenters = barycenter(g, movable);\n  _.forEach(barycenters, function(entry) {\n    if (g.children(entry.v).length) {\n      var subgraphResult = sortSubgraph(g, entry.v, cg, biasRight);\n      subgraphs[entry.v] = subgraphResult;\n      if (_.has(subgraphResult, \"barycenter\")) {\n        mergeBarycenters(entry, subgraphResult);\n      }\n    }\n  });\n\n  var entries = resolveConflicts(barycenters, cg);\n  expandSubgraphs(entries, subgraphs);\n\n  var result = sort(entries, biasRight);\n\n  if (bl) {\n    result.vs = _.flatten([bl, result.vs, br], true);\n    if (g.predecessors(bl).length) {\n      var blPred = g.node(g.predecessors(bl)[0]),\n        brPred = g.node(g.predecessors(br)[0]);\n      if (!_.has(result, \"barycenter\")) {\n        result.barycenter = 0;\n        result.weight = 0;\n      }\n      result.barycenter = (result.barycenter * result.weight +\n                           blPred.order + brPred.order) / (result.weight + 2);\n      result.weight += 2;\n    }\n  }\n\n  return result;\n}\n\nfunction expandSubgraphs(entries, subgraphs) {\n  _.forEach(entries, function(entry) {\n    entry.vs = _.flatten(entry.vs.map(function(v) {\n      if (subgraphs[v]) {\n        return subgraphs[v].vs;\n      }\n      return v;\n    }), true);\n  });\n}\n\nfunction mergeBarycenters(target, other) {\n  if (!_.isUndefined(target.barycenter)) {\n    target.barycenter = (target.barycenter * target.weight +\n                         other.barycenter * other.weight) /\n                        (target.weight + other.weight);\n    target.weight += other.weight;\n  } else {\n    target.barycenter = other.barycenter;\n    target.weight = other.weight;\n  }\n}\n"},"lineCount":77}},"error":null,"hash":"0fe7f964ab288afa65a45ab5d4c20bd4","cacheData":{"env":{}}}